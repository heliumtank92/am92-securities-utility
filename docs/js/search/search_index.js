var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/DownloadManager.html",[0,0.949,1,1.503]],["body/classes/DownloadManager.html",[0,1.512,1,2.295,2,0.986,3,0.847,4,0.847,5,0.651,6,1.362,7,0.908,8,3.873,9,2.383,10,3.077,11,3.602,12,1.694,13,1.452,14,1.308,15,2.383,16,1.963,17,2.459,18,2.999,19,2.553,20,3.873,21,1.977,22,3.602,23,1.057,24,1.977,25,2.988,26,2.383,27,3.268,28,4.534,29,1.512,30,2.999,31,2.999,32,2.999,33,2.383,34,0.373,35,0.651,36,3.53,37,3.53,38,1.642,39,2.999,40,1.337,41,2.711,42,1.686,43,3.077,44,2.999,45,2.383,46,2.161,47,1.977,48,0.061,49,1.673,50,1.003,51,1.97,52,2.327,53,2.161,54,1.977,55,1.977,56,1.673,57,2.711,58,1.431,59,2.383,60,3.077,61,1.97,62,1.057,63,2.066,64,2.383,65,2.999,66,2.805,67,2.383,68,2.999,69,2.999,70,2.999,71,2.999,72,2.999,73,2.999,74,2.999,75,2.999,76,2.999,77,2.066,78,2.327,79,2.805,80,3.873,81,2.729,82,1.97,83,3.53,84,2.327,85,1.97,86,2.805,87,2.327,88,3.53,89,3.077,90,2.53,91,3.53,92,1.684,93,1.977,94,2.553,95,2.383,96,1.673,97,2.999,98,1.977,99,2.999,100,1.447,101,1.447,102,1.97,103,1.642,104,1.362,105,1.977,106,2.066,107,1.977,108,2.066,109,2.066,110,0.986,111,1.684,112,1.153,113,1.642,114,1.362,115,1.642,116,1.642,117,1.362,118,1.362,119,1.153,120,1.362,121,1.642,122,2.383,123,0.624,124,2.066,125,1.977,126,1.977,127,1.642,128,2.066,129,0.847,130,0.847,131,2.066,132,2.805,133,2.066,134,2.066,135,0.986,136,2.066,137,2.066,138,1.642,139,2.066,140,2.066,141,2.066,142,0.986,143,2.066,144,2.066,145,1.642,146,0.847,147,2.066,148,1.362,149,2.066,150,2.066,151,2.066,152,2.066,153,2.383,154,1.673,155,2.066,156,2.066,157,2.066,158,2.066,159,2.066,160,2.066,161,1.642,162,2.066,163,2.066,164,2.066,165,2.066,166,2.066,167,2.066,168,2.066,169,0.034,170,0.034]],["title/interfaces/IConfig.html",[42,1.105,171,0.585]],["body/interfaces/IConfig.html",[3,1.375,4,1.375,5,0.728,7,0.863,23,1.465,34,0.605,35,0.902,42,1.705,48,0.06,50,1.025,51,2.635,56,1.872,58,1.601,130,1.375,146,2.028,169,0.047,170,0.047,171,0.98,172,1.601,173,2.666,174,1.984,175,1.984,176,4.127,177,2.666,178,3.985,179,2.978,180,3.355,181,3.261,182,1.466,183,2.32,184,4.158,185,3.2,186,2.635,187,3.113,188,3.34,189,3.113,190,2.254,191,4.158,192,3.753,193,4.158,194,4.158,195,3.304]],["title/interfaces/ISecSegmentStructureMapType.html",[171,0.585,196,1.776]],["body/interfaces/ISecSegmentStructureMapType.html",[3,1.192,4,1.192,5,0.631,7,0.748,12,1.783,14,1.195,34,0.524,35,0.823,48,0.061,49,2.593,50,1.145,58,1.387,110,2.138,111,2.376,112,2.118,119,1.622,123,1.404,126,2.502,129,1.192,130,1.556,169,0.043,170,0.043,171,1.034,172,1.387,196,2.785,197,1.916,198,3.796,199,2.856,200,3.796,201,3.787,202,2.5,203,2.953,204,3.56,205,3.796,206,3.063,207,3.358,208,3.142,209,3.796,210,1.811,211,3.016,212,2.118,213,3.796,214,3.2,215,3.016,216,2.118,217,1.622,218,1.622,219,1.622,220,1.622,221,1.622,222,1.622,223,1.622,224,1.622,225,1.622,226,1.622,227,1.622,228,1.622,229,1.622,230,1.622,231,1.622,232,1.622,233,2.31,234,2.31,235,1.387,236,2.31,237,1.622,238,2.31,239,1.916]],["title/interfaces/IStore.html",[171,0.585,240,1.286]],["body/interfaces/IStore.html",[0,0.585,2,0.792,3,0.681,4,0.681,5,0.36,7,0.427,12,1.321,13,1.455,14,1.279,29,1.092,33,2.024,34,0.816,35,0.813,40,0.936,48,0.061,50,1.134,55,1.094,62,0.897,67,2.024,92,0.792,96,1.939,102,1.421,107,1.094,110,2.263,111,1.658,114,1.679,117,1.679,119,0.926,120,1.094,123,0.501,129,1.425,130,1.926,135,1.215,161,1.319,169,0.035,170,0.029,171,0.813,172,0.792,182,1.243,188,1.679,189,1.679,190,1.215,199,1.421,202,1.421,206,1.679,210,1.788,212,0.926,216,1.421,217,1.421,218,1.421,219,1.421,220,1.421,221,1.421,222,1.421,223,1.421,224,1.421,225,1.421,226,1.421,227,1.421,228,1.421,229,1.421,230,1.421,231,1.421,232,1.939,235,1.887,237,2.207,238,1.319,240,1.479,241,0.926,242,2.547,243,1.939,244,2.761,245,2.091,246,2.714,247,3.475,248,2.042,249,2.298,250,2.714,251,1.905,252,2.931,253,2.47,254,2.462,255,2.8,256,2.47,257,2.091,258,2.042,259,1.729,260,1.679,261,2.547,262,2.29,263,2.547,264,2.207,265,2.042,266,2.024,267,2.547,268,1.661,269,1.661,270,1.421,271,1.421,272,1.319,273,2.042,274,1.939,275,1.658,276,1.319,277,0.926,278,0.926,279,1.094,280,1.094,281,1.421,282,1.679,283,1.661,284,1.661,285,1.679,286,2.931,287,1.319,288,2.29,289,1.094,290,1.094,291,1.094,292,1.094,293,1.319,294,1.939,295,3.099,296,3.099,297,2.462,298,2.761,299,1.661,300,2.024,301,3.099,302,3.099,303,3.099,304,3.099,305,3.099,306,3.099,307,2.761,308,2.761,309,3.099,310,2.547,311,2.761,312,3.099,313,3.099,314,3.099,315,3.099,316,3.099,317,3.099,318,3.099,319,2.042,320,1.319,321,1.319,322,2.298,323,1.094,324,1.094,325,1.094,326,2.024,327,1.729,328,1.661,329,1.661,330,1.661,331,2.024,332,0.926,333,2.561,334,2.024,335,1.479,336,1.661,337,1.661,338,1.661,339,1.661,340,1.661,341,1.661,342,1.661,343,1.661,344,1.661,345,1.661,346,1.661,347,1.661,348,1.661,349,1.661,350,1.661,351,1.661,352,1.661,353,1.319,354,1.094,355,1.319,356,1.319,357,1.939,358,2.091,359,1.27,360,1.939,361,2.29,362,1.094,363,1.939,364,1.679,365,0.926,366,1.421,367,2.042,368,1.319,369,1.094,370,1.939,371,0.926,372,1.319,373,1.319,374,1.479,375,2.042,376,1.661,377,1.319,378,1.661,379,1.319,380,1.319,381,1.939,382,1.661,383,1.661,384,1.661,385,1.661,386,1.661,387,1.661]],["title/interfaces/IWorkerConstantsOptions.html",[171,0.585,388,1.776]],["body/interfaces/IWorkerConstantsOptions.html",[3,1.193,4,1.193,5,0.631,7,0.749,9,2.313,11,3.36,14,0.977,16,1.389,17,2.487,23,1.338,24,2.504,34,0.525,35,0.824,40,1.565,48,0.06,50,1.069,59,3.36,81,2.594,85,2.119,90,1.624,95,3.018,100,1.734,101,1.193,111,1.389,112,1.624,123,1.277,126,1.918,127,3.018,130,1.193,148,2.954,169,0.043,170,0.043,171,0.631,172,1.389,175,1.389,182,1.467,189,2.504,195,2.313,232,1.624,245,2.857,359,1.193,388,2.504,389,2.313,390,3.799,391,2.911,392,3.799,393,2.911,394,2.313,395,2.911,396,2.313,397,3.561,398,2.313,399,3.789,400,2.911,401,2.911,402,4.229,403,4.229,404,4.229,405,2.911,406,2.911,407,2.911,408,2.313,409,4.769,410,4.769,411,4.926,412,3.799,413,3.799,414,3.799,415,3.799,416,3.799,417,3.799,418,3.799,419,3.799,420,3.799,421,3.799,422,3.799,423,3.799,424,3.799,425,3.799,426,3.799,427,3.799]],["title/classes/SearchManager.html",[0,0.949,428,1.286]],["body/classes/SearchManager.html",[0,0.812,2,1.099,3,0.944,4,0.944,5,0.5,7,0.834,14,1.175,16,1.547,17,2.319,21,2.136,23,1.434,29,0.812,34,0.802,35,0.703,38,2.979,40,1.229,43,3.534,46,1.285,47,2.136,48,0.061,49,1.808,50,0.813,61,2.393,62,1.511,82,1.285,87,2.827,89,1.83,90,2.27,94,1.518,102,2.393,103,1.83,130,0.944,132,2.575,142,1.942,145,1.83,146,0.944,148,2.682,153,1.83,154,2.682,169,0.049,170,0.037,182,1.527,251,1.329,259,1.808,332,2.27,354,2.136,359,1.329,364,2.932,371,2.27,428,2.123,429,1.518,430,3.75,431,3.241,432,2.304,433,3.241,434,3.241,435,4.07,436,4.743,437,4.57,438,4.07,439,3.241,440,2.304,441,2.575,442,2.575,443,3.241,444,4.289,445,2.575,446,3.241,447,3.241,448,2.304,449,3.241,450,3.241,451,3.241,452,3.241,453,2.575,454,3.241,455,3.241,456,3.241,457,2.304,458,1.518,459,2.304,460,2.304,461,2.304,462,1.518,463,3.241,464,2.136,465,2.472,466,3.241,467,3.241,468,2.304,469,2.304,470,4.07,471,3.241,472,2.304,473,1.518,474,2.304,475,2.304,476,2.304,477,1.83,478,2.304,479,2.304,480,3.241,481,2.304,482,2.136,483,2.304,484,2.304,485,1.83,486,1.518,487,2.136,488,2.304,489,2.304,490,2.304,491,3.75,492,1.518,493,2.304,494,2.304,495,2.304,496,2.304,497,2.304,498,3.534,499,2.304,500,2.304,501,2.304,502,1.83,503,2.304,504,2.304,505,2.304,506,2.304,507,2.304,508,2.304,509,2.304,510,1.83,511,1.83,512,1.285,513,1.83]],["title/coverage.html",[514,2.868]],["body/coverage.html",[0,1.11,1,1.235,5,0.48,6,2.076,23,0.78,29,0.78,42,0.907,48,0.061,50,1.117,104,1.458,105,1.458,125,1.458,142,1.056,169,0.036,170,0.036,171,0.916,173,1.758,196,1.458,197,2.418,208,1.458,214,1.458,240,1.056,241,2.778,270,1.235,282,1.458,286,1.458,294,1.235,322,1.235,327,1.235,333,1.235,335,1.056,357,1.235,360,1.235,363,1.235,365,1.235,367,1.458,370,1.235,375,1.458,381,1.235,388,1.458,389,1.758,428,1.503,429,2.076,458,1.458,462,1.458,464,1.458,465,1.458,473,1.458,492,2.076,514,1.758,515,1.758,516,2.213,517,1.758,518,3.386,519,3.151,520,4.257,521,3.151,522,5.138,523,5.349,524,2.634,525,2.452,526,1.758,527,1.758,528,1.758,529,1.758,530,2.076,531,1.758,532,2.076,533,1.758,534,1.758,535,1.758,536,1.758,537,1.758,538,1.758,539,1.758,540,1.758,541,2.213,542,2.213,543,1.758,544,3.151,545,2.503,546,1.458,547,1.458,548,3.176,549,2.213,550,1.758,551,1.758,552,1.458,553,2.213,554,3.488,555,1.758,556,1.758,557,1.758,558,1.758,559,1.758,560,1.758,561,1.758,562,1.758,563,2.418,564,1.758,565,3.786,566,1.758,567,1.758,568,1.758,569,1.758,570,1.758,571,1.758,572,1.758,573,1.758,574,1.758,575,3.26,576,1.758,577,1.758,578,1.758,579,1.758,580,1.758,581,1.458,582,1.458,583,1.458,584,1.458,585,2.213,586,1.758]],["title/dependencies.html",[587,1.275,588,2.56]],["body/dependencies.html",[48,0.056,169,0.053,170,0.053,588,3.281,589,4.13,590,4.13]],["title/miscellaneous/enumerations.html",[591,0.69,592,2.56]],["body/miscellaneous/enumerations.html",[2,1.692,13,1.071,14,0.912,34,0.639,48,0.06,62,1.867,110,1.692,169,0.049,170,0.049,202,2.4,210,1.692,212,1.978,216,2.4,217,2.4,218,2.4,219,2.4,220,2.4,221,2.4,222,2.4,223,2.4,224,2.4,225,2.4,226,2.4,227,2.4,228,2.4,229,2.4,230,2.4,231,2.4,235,2.053,237,1.978,241,1.978,243,1.978,249,2.4,271,2.4,272,2.817,273,2.337,274,1.978,275,1.692,276,2.817,277,1.978,278,1.978,279,2.337,280,2.337,591,1.071,592,2.817,593,2.817]],["title/miscellaneous/functions.html",[591,0.69,594,2.56]],["body/miscellaneous/functions.html",[1,1.206,5,0.672,7,1.247,10,2.877,12,1.646,13,1.488,14,1.338,19,1.424,23,1.091,24,1.424,27,1.717,29,1.801,34,0.889,40,1.498,41,2.871,42,1.786,46,1.206,47,3.248,48,0.058,49,2.749,50,1.028,51,2.768,52,2.606,53,2.43,54,1.424,56,2.02,57,2.042,60,1.717,61,2.335,62,1.393,78,1.424,84,2.042,85,2.206,86,2.877,92,1.031,93,1.424,100,0.886,101,0.886,104,2.042,105,2.386,123,0.653,135,1.478,146,1.27,169,0.035,170,0.035,174,1.031,175,1.728,181,2.042,182,1.194,183,1.206,185,1.424,186,1.728,187,1.424,188,2.606,190,1.478,240,1.478,245,1.206,251,1.484,257,1.206,264,2.02,275,1.728,281,1.206,285,2.386,335,1.887,358,1.728,359,0.886,361,1.424,366,1.206,374,1.728,396,2.461,397,2.461,398,1.717,441,2.461,442,1.717,464,2.386,465,2.386,482,2.042,524,1.424,525,1.031,526,2.461,530,1.424,531,2.461,532,2.042,554,1.717,555,2.461,556,2.461,557,2.461,558,2.877,559,2.461,560,2.461,563,1.424,564,2.877,575,1.424,576,2.461,577,2.461,578,2.461,579,2.461,580,2.461,581,2.386,582,2.386,583,2.386,584,2.386,591,0.653,594,1.717,595,3.964,596,4.356,597,1.717,598,2.161,599,3.461,600,4.356,601,2.161,602,2.161,603,2.161,604,2.161,605,2.161,606,2.161,607,2.161,608,2.161,609,1.717,610,2.161,611,1.717,612,2.161,613,2.161,614,1.717,615,2.161,616,3.646,617,3.098,618,1.717,619,2.161,620,2.386,621,2.606,622,3.142,623,2.161,624,3.621,625,3.326,626,2.461,627,2.161,628,1.717,629,3.142,630,2.461,631,3.621,632,2.161,633,1.717,634,2.161,635,2.877,636,2.161,637,2.161,638,3.098,639,2.042,640,2.161,641,1.717,642,2.461,643,2.161,644,2.161,645,2.161,646,2.161,647,2.161,648,1.717,649,2.161,650,2.161,651,2.161,652,2.461,653,3.142,654,1.717,655,2.161,656,2.161,657,2.161,658,2.161,659,1.717,660,2.161]],["title/index.html",[34,0.412,661,1.815,662,1.815]],["body/index.html",[5,1.005,12,1.572,13,1.535,16,1.372,17,1.798,19,2.483,23,1.572,25,1.895,40,0.868,48,0.06,53,2.345,66,3.544,82,1.604,85,2.741,93,1.895,100,1.545,101,1.545,102,2.345,123,1.138,135,1.372,142,1.798,146,1.545,154,2.489,169,0.043,170,0.043,175,1.372,176,2.284,181,2.483,182,1.269,186,2.102,192,2.284,201,2.284,215,2.284,251,1.178,332,1.604,371,1.604,374,1.372,394,2.284,399,2.993,408,2.993,428,1.372,477,2.284,485,2.284,486,1.895,498,2.284,502,2.284,512,1.604,518,1.895,525,1.372,586,2.284,587,2.102,621,1.895,639,3.052,663,4.632,664,3.679,665,3.768,666,3.768,667,2.102,668,4.632,669,2.875,670,2.875,671,2.875,672,3.768,673,2.875,674,2.875,675,3.768,676,2.875,677,2.875,678,2.875,679,2.875,680,2.875,681,2.875,682,2.875,683,3.768,684,2.875,685,4.203,686,2.875,687,3.768,688,4.203,689,2.875,690,3.768,691,4.203,692,4.203,693,3.768,694,4.461,695,2.993,696,3.768,697,3.768,698,3.768,699,2.993,700,3.768,701,3.768,702,2.284,703,2.875,704,2.875,705,2.875,706,2.875,707,2.875,708,2.284,709,2.875,710,2.875,711,2.875,712,2.875,713,2.875,714,2.875,715,2.875,716,2.875,717,2.875,718,2.875,719,2.875,720,2.875,721,2.875,722,2.875,723,2.875,724,2.875,725,2.875,726,2.875,727,2.284,728,2.875,729,2.284,730,2.875,731,2.875,732,2.875,733,1.895]],["title/license.html",[661,1.815,662,1.815,667,1.275]],["body/license.html",[48,0.049,81,1.981,90,1.981,96,2.402,98,3.054,129,1.456,169,0.049,170,0.049,178,2.821,183,1.981,190,1.695,377,2.821,512,2.402,515,2.821,620,2.341,667,1.981,702,2.821,727,2.821,729,2.821,733,2.341,734,4.634,735,3.552,736,3.552,737,3.552,738,3.552,739,4.306,740,3.552,741,3.552,742,3.552,743,3.552,744,3.552,745,3.552,746,4.306,747,5.158,748,3.552,749,3.552,750,3.552,751,3.552,752,3.552,753,3.552,754,3.552,755,3.552,756,3.552,757,3.552,758,3.552,759,3.552,760,4.306,761,3.552,762,3.552,763,3.552,764,3.552,765,3.552,766,3.552,767,4.306,768,4.306,769,3.552,770,3.552,771,3.552,772,3.552,773,3.552,774,3.552,775,3.552,776,3.552,777,3.552,778,3.552,779,3.552,780,3.552,781,3.552,782,3.552,783,3.552,784,3.552,785,3.552,786,3.552,787,3.552,788,3.552,789,3.552,790,3.552,791,3.552,792,3.552]],["title/modules.html",[174,1.723]],["body/modules.html",[48,0.054,169,0.054,170,0.054,174,1.981]],["title/overview.html",[793,2.868]],["body/overview.html",[2,1.967,48,0.053,169,0.053,170,0.053,172,1.967,793,3.275,794,4.123,795,4.123]],["title/properties.html",[35,0.699,587,1.275]],["body/properties.html",[7,1.02,13,1.198,35,0.86,48,0.059,169,0.052,170,0.052,210,2.316,587,2.213,639,2.614,664,3.652,667,2.213,733,2.614,796,3.151,797,3.967,798,3.967,799,3.967,800,3.967,801,3.967,802,3.967,803,3.967,804,3.967]],["title/miscellaneous/typealiases.html",[591,0.69,805,3.223]],["body/miscellaneous/typealiases.html",[0,0.727,6,1.359,12,1.243,13,1.295,14,1.248,16,0.984,17,1.429,22,2.38,29,0.727,34,0.882,35,0.765,40,1.065,48,0.061,50,1.131,51,1.671,55,1.359,58,0.984,62,1.055,78,1.359,81,1.968,87,1.359,92,0.984,94,1.359,96,1.671,100,0.846,101,0.846,110,2.333,111,2.162,112,1.671,113,1.639,114,2.324,115,1.639,116,1.639,117,2.324,118,1.359,119,1.968,120,2.324,121,1.639,122,1.639,123,1.169,125,1.974,129,1.228,138,1.639,169,0.04,170,0.034,171,0.65,179,1.359,182,1.295,197,1.359,199,2.159,202,1.151,203,1.359,204,1.639,206,1.359,207,1.639,208,1.974,210,2.046,211,2.38,212,1.671,214,1.974,216,1.151,217,1.151,218,1.151,219,1.151,220,1.151,221,1.151,222,1.151,223,1.151,224,1.151,225,1.151,226,1.151,227,1.151,228,1.151,229,1.151,230,1.151,231,1.151,232,2.468,233,3.075,234,2.802,235,0.984,236,1.639,237,1.151,239,1.359,241,1.151,243,1.671,245,2.159,246,1.359,248,1.359,249,1.151,250,2.324,251,1.858,252,2.709,253,1.359,254,1.639,255,2.826,256,1.974,257,1.671,258,1.359,259,1.151,260,1.359,262,2.324,264,2.293,265,1.974,270,1.968,271,1.671,273,1.974,274,2.159,275,1.847,277,1.151,278,1.151,279,1.359,280,1.359,281,1.968,282,1.974,285,1.974,286,2.709,288,2.551,289,1.359,290,1.359,291,1.359,292,1.359,293,1.639,294,1.671,319,2.551,320,1.639,321,1.639,322,1.671,323,1.359,324,1.359,325,1.359,326,2.802,327,1.968,331,2.38,332,1.151,333,1.671,334,2.38,335,1.429,353,1.639,354,1.359,355,1.639,356,1.639,357,1.671,358,1.671,359,1.586,360,1.671,362,1.359,363,1.671,364,1.974,365,1.151,366,1.671,367,1.974,368,1.639,369,1.359,370,1.968,374,1.683,375,1.974,381,1.671,487,1.359,525,1.429,545,1.639,546,1.974,547,1.974,548,1.639,550,2.38,551,2.38,552,1.974,561,1.639,562,2.38,591,0.623,593,3.885,611,1.639,614,1.639,806,2.063,807,2.063,808,3.527,809,2.995,810,2.063,811,2.995,812,4.424,813,2.995,814,2.995,815,1.639,816,2.063,817,2.063,818,2.063,819,2.063,820,2.063,821,2.063,822,2.063,823,2.063,824,1.639,825,2.063,826,2.063,827,2.063,828,2.063,829,2.38,830,2.063,831,2.063,832,1.639,833,2.063,834,2.063,835,2.995,836,2.995,837,2.063,838,2.063,839,1.639,840,2.063,841,2.063]],["title/miscellaneous/variables.html",[591,0.69,842,2.56]],["body/miscellaneous/variables.html",[5,0.61,7,0.246,12,0.99,13,0.923,14,1.009,15,0.759,21,0.629,25,1.652,26,0.759,29,1.263,34,0.737,35,0.544,40,0.641,41,1.399,42,0.87,45,1.687,46,0.533,48,0.061,50,0.663,52,1.071,53,0.907,54,0.629,56,1.398,57,2.151,58,0.456,61,2.581,62,1.598,64,0.759,79,0.759,82,0.907,84,1.852,92,0.456,98,0.629,100,0.391,101,0.391,107,2.151,118,1.652,123,0.288,129,0.391,135,0.456,142,0.776,146,0.87,154,2.893,169,0.018,170,0.018,174,0.456,175,0.776,177,0.759,179,1.399,182,0.641,183,0.533,185,0.629,186,1.398,187,1.071,190,0.776,199,2.133,203,0.629,235,1.013,239,0.629,240,0.456,243,0.533,244,1.292,246,0.629,248,1.071,249,1.706,250,1.399,251,1.859,252,1.399,253,1.071,255,2.151,256,2.265,257,2.071,258,2.151,259,0.533,260,0.629,262,2.52,264,0.907,265,0.629,266,0.759,270,1.568,271,0.533,274,1.398,275,0.776,277,0.533,278,0.533,281,0.533,287,1.687,288,2.151,289,0.629,290,2.74,291,2.016,292,2.016,294,2.071,297,0.759,298,0.759,300,0.759,307,0.759,308,0.759,311,0.759,319,2.694,322,1.917,323,1.071,324,1.071,325,1.071,327,1.568,333,1.917,335,0.776,357,1.706,358,1.917,359,0.391,360,1.184,361,1.652,362,1.399,363,1.184,365,0.533,366,1.398,369,0.629,370,1.184,371,1.568,372,3.038,373,3.038,374,0.456,379,2.43,380,1.292,381,1.184,428,1.196,429,0.629,445,1.687,453,1.687,458,1.071,462,1.071,473,1.399,482,0.629,486,1.071,487,3.204,492,1.852,510,0.759,511,0.759,512,0.533,513,0.759,517,0.759,518,0.629,520,0.759,524,0.629,525,0.776,527,1.292,528,1.292,529,1.292,530,0.629,532,1.652,533,0.759,534,1.687,535,0.759,536,1.687,537,0.759,538,1.687,539,0.759,540,1.687,543,0.759,546,1.852,547,0.629,552,1.852,563,0.629,565,0.759,566,1.687,567,1.292,568,1.292,569,1.292,570,1.292,571,1.292,572,1.292,573,1.292,574,1.292,575,0.629,581,0.629,582,1.071,583,1.399,584,0.629,591,0.288,595,1.687,597,1.687,599,0.759,609,1.292,616,2.43,618,0.759,620,1.071,621,1.852,622,1.687,625,2.233,626,0.759,628,0.759,629,1.687,630,2.593,633,0.759,635,2.43,641,0.759,642,1.292,648,2.593,652,1.292,653,2.233,654,0.759,659,0.759,695,0.759,699,0.759,708,2.43,796,0.759,815,0.759,824,3.185,829,0.759,832,0.759,839,0.759,842,0.759,843,3.713,844,0.955,845,0.955,846,0.955,847,0.955,848,0.955,849,0.955,850,0.955,851,3.058,852,3.264,853,0.955,854,3.264,855,3.437,856,0.955,857,0.955,858,2.811,859,2.506,860,2.506,861,4.087,862,0.955,863,0.955,864,0.955,865,0.955,866,3.713,867,2.123,868,0.955,869,0.955,870,2.123,871,2.123,872,3.264,873,0.955,874,2.123,875,2.811,876,2.123,877,1.626,878,2.123,879,0.955,880,3.058,881,0.955,882,2.123,883,0.955,884,3.058,885,3.058,886,3.058,887,3.058,888,3.058,889,3.058,890,3.058,891,2.506,892,3.058,893,3.058,894,3.058,895,3.058,896,3.058,897,3.058,898,3.058,899,2.506,900,1.626,901,3.713,902,2.123,903,1.626,904,2.811,905,3.585,906,1.626,907,3.058,908,1.626,909,1.626,910,0.955,911,1.626,912,0.955,913,1.626,914,0.955,915,1.626,916,1.626,917,0.955,918,0.955,919,0.955,920,0.955,921,0.955,922,0.955,923,0.955,924,0.955,925,0.955,926,0.955,927,0.955,928,0.955,929,0.955,930,0.955,931,0.955,932,0.955,933,0.955,934,0.955,935,2.506,936,0.955,937,0.955,938,0.955,939,0.955,940,0.955,941,1.626,942,0.955,943,0.955,944,0.955,945,1.626,946,1.626,947,1.626,948,4.087,949,0.955,950,3.922,951,0.955,952,3.437,953,3.585,954,0.955,955,0.955,956,0.955,957,0.955,958,0.955,959,0.955,960,0.955,961,0.955,962,0.955,963,0.955,964,0.955,965,3.585,966,1.626,967,1.626,968,1.626,969,0.955,970,0.955,971,0.955,972,0.955,973,0.955,974,0.955,975,0.955,976,0.955,977,0.955,978,0.955,979,0.955,980,0.955,981,0.955,982,0.955,983,0.955,984,0.955,985,1.626,986,0.955,987,1.626,988,1.626,989,1.626,990,0.955,991,0.955,992,0.955,993,0.955,994,0.955,995,0.955,996,0.955,997,0.955,998,0.955,999,0.955,1000,1.626,1001,3.437,1002,3.437,1003,0.955,1004,0.955,1005,3.585,1006,1.626,1007,1.626,1008,1.626,1009,2.123,1010,1.626,1011,0.955,1012,0.955,1013,0.955,1014,0.955,1015,0.955,1016,0.955,1017,3.437,1018,1.626,1019,1.626,1020,1.626,1021,0.955,1022,0.955,1023,0.955,1024,1.626,1025,2.123,1026,2.123,1027,0.955,1028,1.626,1029,1.626,1030,0.955,1031,1.626,1032,0.955,1033,0.955,1034,0.955,1035,3.264,1036,0.955,1037,0.955,1038,1.626,1039,0.955,1040,0.955,1041,1.626,1042,0.955,1043,0.955,1044,0.955,1045,0.955,1046,0.955,1047,0.955,1048,0.955,1049,0.955,1050,0.955,1051,0.955,1052,1.626,1053,0.955,1054,0.955,1055,0.955,1056,0.955]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":492,"title":{},"body":{"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.0",{"_index":797,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["1/1",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":520,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":794,"title":{},"body":{"overview.html":{}}}],["2024",{"_index":736,"title":{},"body":{"license.html":{}}}],["3",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.1.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":795,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_exchange",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_flattenresult",{"_index":430,"title":{},"body":{"classes/SearchManager.html":{}}}],["_getscripbyscripid",{"_index":566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_getsegmentdetails",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_getsegmentdetails(masterdatasegment",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_getsegmentdetails(scriptidindexvalue[0",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_mapflattenderivativescripttoscript",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_mapflattenderivativescripttoscript(scriptidindexvalue",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_mapflattenequityscripttoscript",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_mapflattenequityscripttoscript(scriptidindexvalue",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_mapflattenunderlingscripttoscript",{"_index":570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_mapflattenunderlingscripttoscript(scriptidindexvalue",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_segment",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":766,"title":{},"body":{"license.html":{}}}],["access",{"_index":247,"title":{},"body":{"interfaces/IStore.html":{}}}],["accordingly",{"_index":610,"title":{},"body":{"miscellaneous/functions.html":{}}}],["account",{"_index":738,"title":{},"body":{"license.html":{}}}],["action",{"_index":81,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["actiontype",{"_index":480,"title":{},"body":{"classes/SearchManager.html":{}}}],["add",{"_index":82,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["addderivativeindexes",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addderivativeindexes(data",{"_index":598,"title":{},"body":{"miscellaneous/functions.html":{}}}],["added",{"_index":600,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addeventlistener(security_master_initialized",{"_index":468,"title":{},"body":{"classes/SearchManager.html":{}}}],["adding",{"_index":830,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["addisincodeindexex",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addisincodeindexex(data",{"_index":601,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":118,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["addmasterdata",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addmasterdata(data",{"_index":602,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addrow",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adds",{"_index":599,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["addscripidindexes",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addscripidindexes(data",{"_index":603,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addsearchstringindexes",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addsearchstringindexes(data",{"_index":604,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addstore",{"_index":104,"title":{},"body":{"classes/DownloadManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addstore(inputstore",{"_index":605,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addstore(masterdatawithindexes",{"_index":163,"title":{},"body":{"classes/DownloadManager.html":{}}}],["agarwal",{"_index":730,"title":{},"body":{"index.html":{}}}],["alias",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allows",{"_index":177,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["am92/securities",{"_index":663,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":758,"title":{},"body":{"license.html":{}}}],["ankit",{"_index":727,"title":{},"body":{"index.html":{},"license.html":{}}}],["another",{"_index":109,"title":{},"body":{"classes/DownloadManager.html":{}}}],["anyfunction",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["app",{"_index":513,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":176,"title":{},"body":{"interfaces/IConfig.html":{},"index.html":{}}}],["application's",{"_index":28,"title":{},"body":{"classes/DownloadManager.html":{}}}],["applications",{"_index":798,"title":{},"body":{"properties.html":{}}}],["applies",{"_index":674,"title":{},"body":{"index.html":{}}}],["approach",{"_index":720,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":613,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arguments",{"_index":138,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/typealiases.html":{}}}],["arising",{"_index":790,"title":{},"body":{"license.html":{}}}],["array",{"_index":332,"title":{},"body":{"interfaces/IStore.html":{},"classes/SearchManager.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["arrays",{"_index":439,"title":{},"body":{"classes/SearchManager.html":{}}}],["aslallowed",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asmflag",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asset",{"_index":273,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["assetclass",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":815,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["associate",{"_index":644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["associated",{"_index":129,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["associating",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":486,"title":{},"body":{"classes/SearchManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["authors",{"_index":782,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":712,"title":{},"body":{"index.html":{}}}],["await",{"_index":708,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":26,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":20,"title":{},"body":{"classes/DownloadManager.html":{}}}],["based",{"_index":179,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["beautify",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["begin",{"_index":401,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["behavior",{"_index":60,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{}}}],["being",{"_index":127,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{}}}],["blocking",{"_index":99,"title":{},"body":{"classes/DownloadManager.html":{}}}],["boolean",{"_index":188,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IStore.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":362,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["browser",{"_index":139,"title":{},"body":{"classes/DownloadManager.html":{}}}],["bse",{"_index":278,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bse_eq_equity",{"_index":216,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["bse_eq_underlying",{"_index":231,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["c",{"_index":735,"title":{},"body":{"license.html":{}}}],["cache",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["cacheexpirationtime",{"_index":638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cacheresponse",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":420,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["calls",{"_index":612,"title":{},"body":{"miscellaneous/functions.html":{}}}],["case",{"_index":75,"title":{},"body":{"classes/DownloadManager.html":{}}}],["catch",{"_index":699,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["categorization",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categorize",{"_index":840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["category",{"_index":209,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{}}}],["changed",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changes",{"_index":443,"title":{},"body":{"classes/SearchManager.html":{}}}],["charge",{"_index":743,"title":{},"body":{"license.html":{}}}],["check",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkifcontenthashissame",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkifcontenthashissame(contenthash",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["checking",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checks",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["chunk",{"_index":364,"title":{},"body":{"interfaces/IStore.html":{},"classes/SearchManager.html":{},"miscellaneous/typealiases.html":{}}}],["chunked",{"_index":259,"title":{},"body":{"interfaces/IStore.html":{},"classes/SearchManager.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["chunkindex",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chunks",{"_index":470,"title":{},"body":{"classes/SearchManager.html":{}}}],["claim",{"_index":785,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{}},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"classes/SearchManager.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["clean",{"_index":407,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["cleanup",{"_index":424,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["closeprice",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cmotscocode",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":374,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["codes",{"_index":265,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["collection",{"_index":834,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["combines",{"_index":433,"title":{},"body":{"classes/SearchManager.html":{}}}],["commence",{"_index":421,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["commonly",{"_index":415,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["communicated",{"_index":128,"title":{},"body":{"classes/DownloadManager.html":{}}}],["communication",{"_index":195,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IWorkerConstantsOptions.html":{}}}],["compare",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compares",{"_index":619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparing",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":33,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{}}}],["coname",{"_index":291,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":765,"title":{},"body":{"license.html":{}}}],["config",{"_index":41,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":56,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":717,"title":{},"body":{"index.html":{}}}],["connection",{"_index":791,"title":{},"body":{"license.html":{}}}],["consistency",{"_index":395,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["console",{"_index":69,"title":{},"body":{"classes/DownloadManager.html":{}}}],["console.error('sec",{"_index":700,"title":{},"body":{"index.html":{}}}],["console.group('error",{"_index":166,"title":{},"body":{"classes/DownloadManager.html":{}}}],["console.groupend",{"_index":168,"title":{},"body":{"classes/DownloadManager.html":{}}}],["console.log('error",{"_index":167,"title":{},"body":{"classes/DownloadManager.html":{}}}],["console.log('sec",{"_index":697,"title":{},"body":{"index.html":{}}}],["console.log(err",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(searchresult",{"_index":502,"title":{},"body":{"classes/SearchManager.html":{},"index.html":{}}}],["console.warn('derivativesindex",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('isincodeindex",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('masterdata",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn('scriptidindex",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.warn(security_master_not_initialized",{"_index":489,"title":{},"body":{"classes/SearchManager.html":{}}}],["const",{"_index":154,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":411,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["constants",{"_index":390,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["constants/error_message",{"_index":459,"title":{},"body":{"classes/SearchManager.html":{}}}],["constants/events",{"_index":103,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{}}}],["constants/search_worker",{"_index":461,"title":{},"body":{"classes/SearchManager.html":{}}}],["constants/store_keys",{"_index":269,"title":{},"body":{"interfaces/IStore.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{}}}],["constructor(secmasterurl",{"_index":39,"title":{},"body":{"classes/DownloadManager.html":{}}}],["containing",{"_index":93,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["contains",{"_index":117,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["content",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["contenthash",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contract",{"_index":788,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":666,"title":{},"body":{"index.html":{}}}],["control",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":760,"title":{},"body":{"license.html":{}}}],["copy",{"_index":746,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":734,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":716,"title":{},"body":{"index.html":{}}}],["correspond",{"_index":272,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{}}}],["corresponding",{"_index":253,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["corresponds",{"_index":611,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["cors",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":514,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":690,"title":{},"body":{"index.html":{}}}],["createindexes",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":45,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["current",{"_index":833,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["currentcontenthash",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentheaders",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customize",{"_index":651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["damages",{"_index":786,"title":{},"body":{"license.html":{}}}],["data",{"_index":14,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":749,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":792,"title":{},"body":{"license.html":{}}}],["debug",{"_index":160,"title":{},"body":{"classes/DownloadManager.html":{}}}],["debugging",{"_index":72,"title":{},"body":{"classes/DownloadManager.html":{}}}],["dedicated",{"_index":686,"title":{},"body":{"index.html":{}}}],["default",{"_index":61,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_cache_expiration_time",{"_index":640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default_values",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":43,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{}}}],["defines",{"_index":112,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["defining",{"_index":58,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":588,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depending",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["depends",{"_index":122,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/typealiases.html":{}}}],["deployment",{"_index":718,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":255,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["derivativeitem",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativeitem![0",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativeitem![12",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativeitem![13",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativeitem![3",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativeitemindex",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivatives",{"_index":275,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["derivativesindex",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativesindex[underlyingid",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativesindexhandler",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["derivativesscriptidsobj",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativesscriptindex",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivativetype",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["designed",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["details",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":205,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{}}}],["determines",{"_index":236,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{}}}],["developers",{"_index":73,"title":{},"body":{"classes/DownloadManager.html":{}}}],["different",{"_index":271,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dispatch",{"_index":88,"title":{},"body":{"classes/DownloadManager.html":{}}}],["dispatchevent(new",{"_index":164,"title":{},"body":{"classes/DownloadManager.html":{}}}],["distribute",{"_index":756,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":515,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["don't",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":10,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{}}}],["downloaded",{"_index":659,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["downloading",{"_index":19,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["downloadmanager",{"_index":1,"title":{"classes/DownloadManager.html":{}},"body":{"classes/DownloadManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["downloads",{"_index":673,"title":{},"body":{"index.html":{}}}],["dprhigh",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dprlow",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":136,"title":{},"body":{"classes/DownloadManager.html":{}}}],["during",{"_index":705,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":201,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"index.html":{}}}],["each",{"_index":359,"title":{},"body":{"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":71,"title":{},"body":{"classes/DownloadManager.html":{}}}],["efficient",{"_index":246,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":192,"title":{},"body":{"interfaces/IConfig.html":{},"index.html":{}}}],["enhance",{"_index":676,"title":{},"body":{"index.html":{}}}],["enriched",{"_index":505,"title":{},"body":{"classes/SearchManager.html":{}}}],["enriches",{"_index":434,"title":{},"body":{"classes/SearchManager.html":{}}}],["ensure",{"_index":394,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{},"index.html":{}}}],["ensures",{"_index":422,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["ensuring",{"_index":713,"title":{},"body":{"index.html":{}}}],["entire",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":237,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":592,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":694,"title":{},"body":{"index.html":{}}}],["equity",{"_index":274,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":66,"title":{},"body":{"classes/DownloadManager.html":{},"index.html":{}}}],["errors",{"_index":64,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/variables.html":{}}}],["etc",{"_index":276,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{}}}],["event",{"_index":90,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"license.html":{}}}],["event(security_master_initialized",{"_index":165,"title":{},"body":{"classes/DownloadManager.html":{}}}],["event.data",{"_index":155,"title":{},"body":{"classes/DownloadManager.html":{}}}],["event.data?.data",{"_index":157,"title":{},"body":{"classes/DownloadManager.html":{}}}],["events",{"_index":32,"title":{},"body":{"classes/DownloadManager.html":{}}}],["example",{"_index":668,"title":{},"body":{"index.html":{}}}],["exchange",{"_index":262,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["exchanges",{"_index":212,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["exchangesecurityid",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchangeseries",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchangesymbol",{"_index":373,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":184,"title":{},"body":{"interfaces/IConfig.html":{}}}],["excludes",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execution",{"_index":399,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{},"index.html":{}}}],["exists",{"_index":632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expected",{"_index":416,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["expires",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expirydate",{"_index":323,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":130,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{}}}],["exported",{"_index":511,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":773,"title":{},"body":{"license.html":{}}}],["extract",{"_index":825,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["extracts",{"_index":634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["factors",{"_index":841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["failed",{"_index":701,"title":{},"body":{"index.html":{}}}],["false",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":54,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fetch(secmasterurl",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetches",{"_index":445,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/variables.html":{}}}],["fetching",{"_index":97,"title":{},"body":{"classes/DownloadManager.html":{}}}],["fetchonlyheaders",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetchonlyheaders(secmasterurl",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchsecuritymaster",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":116,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/typealiases.html":{}}}],["fields",{"_index":826,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fiftytwoweekhigh",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fiftytwoweeklow",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["figure",{"_index":376,"title":{},"body":{"interfaces/IStore.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file's",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":748,"title":{},"body":{"license.html":{}}}],["filter(script",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtered",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["final",{"_index":455,"title":{},"body":{"classes/SearchManager.html":{}}}],["financial",{"_index":813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fitness",{"_index":778,"title":{},"body":{"license.html":{}}}],["flag",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flat_equity",{"_index":203,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["flat_underlying",{"_index":239,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["flattenderivative",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flattenderivativescript",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flattenderivativescripts",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flattenderivativescripts[derivativesscriptindex",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flattened",{"_index":504,"title":{},"body":{"classes/SearchManager.html":{}}}],["flattenequityscript",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flattens",{"_index":453,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":702,"title":{},"body":{"index.html":{},"license.html":{}}}],["found",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fourth",{"_index":838,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["free",{"_index":742,"title":{},"body":{"license.html":{}}}],["fully",{"_index":267,"title":{},"body":{"interfaces/IStore.html":{}}}],["function",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionalities",{"_index":679,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":194,"title":{},"body":{"interfaces/IConfig.html":{}}}],["functions",{"_index":594,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":763,"title":{},"body":{"license.html":{}}}],["futcom",{"_index":823,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["futcur",{"_index":820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["futidx",{"_index":817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["futstk",{"_index":816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["futures",{"_index":256,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["futures.includes(instrumenttype",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fuzzy",{"_index":704,"title":{},"body":{"index.html":{}}}],["fuzzysort",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["gandhi",{"_index":728,"title":{},"body":{"index.html":{}}}],["generateindexesandpostmessage",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generateindexesandpostmessage(cacheresponse",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generateindexesandpostmessage(masterdata",{"_index":645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generateindexesandpostmessage(sec_master_array",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generates",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generic",{"_index":827,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getcacheresponse",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcacheresponse(secmasterurl",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getchunkindex(searchpriority",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcontenthashfromheaders",{"_index":557,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcontenthashfromheaders(currentheaders",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcontenthashfromheaders(headers",{"_index":633,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getderivativeindex",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getderivativescripsbyscripid",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getindex",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getisinindex",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getlastcachedcontenthash",{"_index":558,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmasterdata",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getscripbyscripid",{"_index":572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getscripbyscripid(scriptid",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getscripindex",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getscripsbyisincode",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getscripsbyscripids",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getscripsbyscripids(derivativesscriptidsobj.futures",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getscripsbyscripids(derivativesscriptidsobj.options",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getscripsbyscripids(scriptids",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getscriptbyscriptidindexvalue",{"_index":462,"title":{},"body":{"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getscriptbyscriptidindexvalue(locations",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getscriptbyscriptidindexvalue(resultitem.obj.data",{"_index":508,"title":{},"body":{"classes/SearchManager.html":{}}}],["getsearchindex",{"_index":464,"title":{},"body":{"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getsecuritymasterinitializationstatus",{"_index":465,"title":{},"body":{"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":661,"title":{"index.html":{},"license.html":{}},"body":{}}],["git@github.com:heliumtank92/am92",{"_index":803,"title":{},"body":{"properties.html":{}}}],["given",{"_index":631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["granted",{"_index":741,"title":{},"body":{"license.html":{}}}],["grouped",{"_index":68,"title":{},"body":{"classes/DownloadManager.html":{}}}],["groups",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["halts",{"_index":425,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["handle",{"_index":18,"title":{},"body":{"classes/DownloadManager.html":{}}}],["handler",{"_index":836,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handlers",{"_index":835,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["handles",{"_index":25,"title":{},"body":{"classes/DownloadManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["handlesearch",{"_index":707,"title":{},"body":{"index.html":{}}}],["handling",{"_index":828,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["hash",{"_index":622,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["head",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":635,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":393,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["helps",{"_index":839,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":740,"title":{},"body":{"license.html":{}}}],["holders",{"_index":783,"title":{},"body":{"license.html":{}}}],["holds",{"_index":242,"title":{},"body":{"interfaces/IStore.html":{}}}],["homepage",{"_index":800,"title":{},"body":{"properties.html":{}}}],["https://heliumtank92.github.io/securities",{"_index":801,"title":{},"body":{"properties.html":{}}}],["iconfig",{"_index":42,"title":{"interfaces/IConfig.html":{}},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":285,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":365,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["identifies",{"_index":115,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/typealiases.html":{}}}],["ids",{"_index":252,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["implied",{"_index":774,"title":{},"body":{"license.html":{}}}],["import",{"_index":102,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"classes/SearchManager.html":{},"index.html":{}}}],["import.meta.url",{"_index":145,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{}}}],["include",{"_index":685,"title":{},"body":{"index.html":{}}}],["included",{"_index":178,"title":{},"body":{"interfaces/IConfig.html":{},"license.html":{}}}],["includes",{"_index":114,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["including",{"_index":96,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":688,"title":{},"body":{"index.html":{}}}],["index[chunkindex",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index[chunkindex].push(searchobj",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index[isincode",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index[isincode].push(scriptid",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index[scriptid",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index[underlying",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index[underlying][key].push(scriptid",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexes",{"_index":84,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexes_created",{"_index":80,"title":{},"body":{"classes/DownloadManager.html":{}}}],["indexesarray",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexesarray[0",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexesarray[1",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexesarray[2",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexesarray[3",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexhandler?.addrow",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexhandler?.addrow(secmastersegmentkey",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexhandler?.getindex",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexhandlers",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexhandlers.map(indexhandler",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexhandlers.push",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indexing",{"_index":366,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":189,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{}}}],["indices",{"_index":244,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{}}}],["information",{"_index":119,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["init",{"_index":148,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{}}}],["initial",{"_index":159,"title":{},"body":{"classes/DownloadManager.html":{}}}],["initialization",{"_index":85,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["initialize",{"_index":23,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["initialize(sec_master_url",{"_index":696,"title":{},"body":{"index.html":{}}}],["initialize(secmasterurl",{"_index":650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialized",{"_index":135,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["initializedownload",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initializedownload(secmasterurl",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializes",{"_index":441,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/functions.html":{}}}],["initializesecmaster.ts",{"_index":691,"title":{},"body":{"index.html":{}}}],["initiates",{"_index":449,"title":{},"body":{"classes/SearchManager.html":{}}}],["input",{"_index":608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputstore",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":670,"title":{},"body":{"index.html":{}}}],["installation",{"_index":665,"title":{},"body":{"index.html":{}}}],["instance",{"_index":46,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["instruct",{"_index":414,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["instructions",{"_index":689,"title":{},"body":{"index.html":{}}}],["instrument",{"_index":814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["instruments",{"_index":326,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["instrumenttype",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interact",{"_index":391,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["interface",{"_index":171,"title":{"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{}},"body":{"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["interfaces",{"_index":172,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"overview.html":{}}}],["internal",{"_index":726,"title":{},"body":{"index.html":{}}}],["internally",{"_index":681,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":137,"title":{},"body":{"classes/DownloadManager.html":{}}}],["is_security_master_loaded",{"_index":466,"title":{},"body":{"classes/SearchManager.html":{}}}],["isaslallowed",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscontenthashsame",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscript",{"_index":270,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iscript['aslallowed",{"_index":297,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["iscript['asmflag",{"_index":312,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['assetclass",{"_index":306,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['closeprice",{"_index":305,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['cmotscocode",{"_index":314,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['coname",{"_index":301,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['dprhigh",{"_index":316,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['dprlow",{"_index":315,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['exchange",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscript['exchangesecurityid",{"_index":296,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['exchangeseries",{"_index":299,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['exchangesymbol",{"_index":298,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["iscript['expirydate",{"_index":328,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['fiftytwoweekhigh",{"_index":318,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['fiftytwoweeklow",{"_index":317,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['instrumenttype",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscript['isincode",{"_index":300,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["iscript['lotsize",{"_index":302,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['maxsingleorderqty",{"_index":310,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['nriallowed",{"_index":304,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['odinllfcsegmentid",{"_index":313,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['odintokenid",{"_index":295,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['optiontype",{"_index":330,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['scriptid",{"_index":287,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["iscript['searchable",{"_index":307,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["iscript['searchpriority",{"_index":308,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["iscript['segment",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscript['strikeprice",{"_index":329,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['ticksize",{"_index":303,"title":{},"body":{"interfaces/IStore.html":{}}}],["iscript['underlying",{"_index":311,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["iscript['yesterdayopenint",{"_index":309,"title":{},"body":{"interfaces/IStore.html":{}}}],["isecsegmentstructuremaptype",{"_index":196,"title":{"interfaces/ISecSegmentStructureMapType.html":{}},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"coverage.html":{}}}],["isin",{"_index":264,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["isincode",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isincodeindex",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isincodeindex[isincode",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isincodeindexhandler",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issecuritymasterloaded",{"_index":564,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["istore",{"_index":240,"title":{"interfaces/IStore.html":{}},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["isvalidisincode",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[0",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[1",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[11",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[12",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[13",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[14",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[3",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[4",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[6",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemdata",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemindex",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iterates",{"_index":606,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iworkerconstantsoptions",{"_index":388,"title":{"interfaces/IWorkerConstantsOptions.html":{}},"body":{"interfaces/IWorkerConstantsOptions.html":{},"coverage.html":{}}}],["jadhav",{"_index":732,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":721,"title":{},"body":{"index.html":{}}}],["kept",{"_index":158,"title":{},"body":{"classes/DownloadManager.html":{}}}],["key",{"_index":361,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["keyof",{"_index":283,"title":{},"body":{"interfaces/IStore.html":{}}}],["keys",{"_index":281,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["keywords",{"_index":799,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":772,"title":{},"body":{"license.html":{}}}],["last",{"_index":636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["later",{"_index":162,"title":{},"body":{"classes/DownloadManager.html":{}}}],["level",{"_index":356,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["leveraging",{"_index":724,"title":{},"body":{"index.html":{}}}],["liability",{"_index":787,"title":{},"body":{"license.html":{}}}],["liable",{"_index":784,"title":{},"body":{"license.html":{}}}],["license",{"_index":667,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["lifecycle",{"_index":392,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["limitation",{"_index":751,"title":{},"body":{"license.html":{}}}],["limited",{"_index":775,"title":{},"body":{"license.html":{}}}],["list",{"_index":334,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":191,"title":{},"body":{"interfaces/IConfig.html":{}}}],["loaded",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["locations",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":65,"title":{},"body":{"classes/DownloadManager.html":{}}}],["lookup",{"_index":266,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["lookups",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loop",{"_index":471,"title":{},"body":{"classes/SearchManager.html":{}}}],["loops",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lotsize",{"_index":292,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":100,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["manage",{"_index":837,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["manager",{"_index":442,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/functions.html":{}}}],["manages",{"_index":682,"title":{},"body":{"index.html":{}}}],["managing",{"_index":9,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{}}}],["map",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(scriptid",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map.push(3",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapping",{"_index":198,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{}}}],["maps",{"_index":250,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["markets",{"_index":213,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{}}}],["master",{"_index":13,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["master_data_segments",{"_index":249,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["master_data_segments.bse_eq_equity",{"_index":337,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.bse_eq_underlying",{"_index":352,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.mcx_comm_futcom",{"_index":345,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.mcx_comm_optfut",{"_index":344,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.mcx_comm_underlying",{"_index":349,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.ncdex_comm_futcom",{"_index":347,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.ncdex_comm_optfut",{"_index":346,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.ncdex_comm_underlying",{"_index":350,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_curr_futcur",{"_index":342,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_curr_optcur",{"_index":343,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_curr_underlying",{"_index":348,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_eq_equity",{"_index":336,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_eq_underlying",{"_index":351,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_fo_futidx",{"_index":339,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_fo_futstk",{"_index":338,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_fo_optidx",{"_index":340,"title":{},"body":{"interfaces/IStore.html":{}}}],["master_data_segments.nse_fo_optstk",{"_index":341,"title":{},"body":{"interfaces/IStore.html":{}}}],["masterdata",{"_index":648,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["masterdata[masterdatasegment",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["masterdata[secmastersegmentkey",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["masterdatasegment",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["masterdatasegment.split('_",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["masterdatawithindexes",{"_index":156,"title":{},"body":{"classes/DownloadManager.html":{}}}],["matched",{"_index":485,"title":{},"body":{"classes/SearchManager.html":{},"index.html":{}}}],["matching",{"_index":170,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxsingleorderqty",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mcx",{"_index":279,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mcx_comm_futcom",{"_index":224,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mcx_comm_optfut",{"_index":223,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mcx_comm_underlying",{"_index":228,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mehul",{"_index":729,"title":{},"body":{"index.html":{},"license.html":{}}}],["memoize(_getscripbyscripid",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memoized",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":777,"title":{},"body":{"license.html":{}}}],["merge",{"_index":754,"title":{},"body":{"license.html":{}}}],["message",{"_index":94,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"miscellaneous/typealiases.html":{}}}],["messageevent",{"_index":153,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{}}}],["messages",{"_index":22,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["method",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":614,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":591,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":733,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modified",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":753,"title":{},"body":{"license.html":{}}}],["module",{"_index":146,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["module's",{"_index":193,"title":{},"body":{"interfaces/IConfig.html":{}}}],["modules",{"_index":174,"title":{"modules.html":{}},"body":{"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["monitor",{"_index":74,"title":{},"body":{"classes/DownloadManager.html":{}}}],["more",{"_index":293,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["move",{"_index":108,"title":{},"body":{"classes/DownloadManager.html":{}}}],["multi",{"_index":355,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["multiple",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":49,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{}}}],["ncdex",{"_index":280,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ncdex_comm_futcom",{"_index":226,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ncdex_comm_optfut",{"_index":225,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ncdex_comm_underlying",{"_index":229,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["necessary",{"_index":31,"title":{},"body":{"classes/DownloadManager.html":{}}}],["need",{"_index":684,"title":{},"body":{"index.html":{}}}],["needs",{"_index":180,"title":{},"body":{"interfaces/IConfig.html":{}}}],["nested",{"_index":204,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":142,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":781,"title":{},"body":{"license.html":{}}}],["note",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notes",{"_index":711,"title":{},"body":{"index.html":{}}}],["notice",{"_index":767,"title":{},"body":{"license.html":{}}}],["notify",{"_index":91,"title":{},"body":{"classes/DownloadManager.html":{}}}],["npm",{"_index":669,"title":{},"body":{"index.html":{}}}],["nriallowed",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nse",{"_index":277,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nse_curr_futcur",{"_index":221,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nse_curr_optcur",{"_index":222,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nse_curr_underlying",{"_index":227,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nse_eq_equity",{"_index":202,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nse_eq_underlying",{"_index":230,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nse_fo_futidx",{"_index":218,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nse_fo_futstk",{"_index":217,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nse_fo_optidx",{"_index":219,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nse_fo_optstk",{"_index":220,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["nsescriptid",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":380,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":358,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":57,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.fromentries",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(chunks).foreach((chunk",{"_index":472,"title":{},"body":{"classes/SearchManager.html":{}}}],["objects",{"_index":710,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":745,"title":{},"body":{"license.html":{}}}],["odinllfcsegmentid",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odintokenid",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onerror",{"_index":36,"title":{},"body":{"classes/DownloadManager.html":{}}}],["ongoing",{"_index":426,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["onmessage",{"_index":37,"title":{},"body":{"classes/DownloadManager.html":{}}}],["operation",{"_index":404,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["operations",{"_index":829,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["optcur",{"_index":821,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["optfut",{"_index":822,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["optidx",{"_index":818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["optimizations",{"_index":675,"title":{},"body":{"index.html":{}}}],["optimized",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":51,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["optionally",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options",{"_index":257,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.includes(instrumenttype",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.requiresearchmodule",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optiontype",{"_index":325,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["optstk",{"_index":819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["organized",{"_index":206,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["organizes",{"_index":254,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["organizing",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherwise",{"_index":183,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":377,"title":{},"body":{"interfaces/IStore.html":{},"license.html":{}}}],["output",{"_index":70,"title":{},"body":{"classes/DownloadManager.html":{}}}],["over",{"_index":607,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":793,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":587,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{},"properties.html":{}}}],["package's",{"_index":725,"title":{},"body":{"index.html":{}}}],["parallel",{"_index":683,"title":{},"body":{"index.html":{}}}],["param",{"_index":132,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{}}}],["parses",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":779,"title":{},"body":{"license.html":{}}}],["pass",{"_index":477,"title":{},"body":{"classes/SearchManager.html":{},"index.html":{}}}],["payload",{"_index":479,"title":{},"body":{"classes/SearchManager.html":{}}}],["per",{"_index":447,"title":{},"body":{"classes/SearchManager.html":{}}}],["perform",{"_index":403,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["performance",{"_index":677,"title":{},"body":{"index.html":{}}}],["permission",{"_index":739,"title":{},"body":{"license.html":{}}}],["permit",{"_index":761,"title":{},"body":{"license.html":{}}}],["person",{"_index":744,"title":{},"body":{"license.html":{}}}],["persons",{"_index":762,"title":{},"body":{"license.html":{}}}],["pick",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placeholder",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populate",{"_index":824,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["populate.filter(key",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populate.length",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["populating",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":770,"title":{},"body":{"license.html":{}}}],["possible",{"_index":233,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{}}}],["post",{"_index":493,"title":{},"body":{"classes/SearchManager.html":{}}}],["postmessage",{"_index":476,"title":{},"body":{"classes/SearchManager.html":{}}}],["posts",{"_index":647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pragma",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepared",{"_index":413,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["preparing",{"_index":398,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{}}}],["priorities",{"_index":261,"title":{},"body":{"interfaces/IStore.html":{}}}],["priority",{"_index":369,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":131,"title":{},"body":{"classes/DownloadManager.html":{}}}],["process",{"_index":24,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{}}}],["process.env.sec_master_url",{"_index":693,"title":{},"body":{"index.html":{}}}],["processed",{"_index":83,"title":{},"body":{"classes/DownloadManager.html":{}}}],["processes",{"_index":79,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/variables.html":{}}}],["processing",{"_index":11,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{}}}],["promise",{"_index":483,"title":{},"body":{"classes/SearchManager.html":{}}}],["promise(resolve",{"_index":488,"title":{},"body":{"classes/SearchManager.html":{}}}],["proper",{"_index":423,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":126,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IWorkerConstantsOptions.html":{}}}],["provided",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":67,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{}}}],["publish",{"_index":755,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":780,"title":{},"body":{"license.html":{}}}],["quick",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raw",{"_index":435,"title":{},"body":{"classes/SearchManager.html":{}}}],["readonly",{"_index":238,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{}}}],["ready",{"_index":444,"title":{},"body":{"classes/SearchManager.html":{}}}],["received",{"_index":78,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["receives",{"_index":113,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/typealiases.html":{}}}],["reference",{"_index":353,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["related",{"_index":120,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["relevant",{"_index":368,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["remains",{"_index":714,"title":{},"body":{"index.html":{}}}],["remove",{"_index":161,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{}}}],["repository",{"_index":802,"title":{},"body":{"properties.html":{}}}],["represented",{"_index":207,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{}}}],["representing",{"_index":110,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":232,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["request",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":175,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["requiresearchmodule",{"_index":186,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["requiresocketmodule",{"_index":187,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["resolve",{"_index":490,"title":{},"body":{"classes/SearchManager.html":{}}}],["resolve(searchresult",{"_index":503,"title":{},"body":{"classes/SearchManager.html":{}}}],["resolves",{"_index":454,"title":{},"body":{"classes/SearchManager.html":{}}}],["resolving",{"_index":484,"title":{},"body":{"classes/SearchManager.html":{}}}],["resources",{"_index":408,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{},"index.html":{}}}],["response",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["response.json",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response?.headers",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responses",{"_index":452,"title":{},"body":{"classes/SearchManager.html":{}}}],["responsible",{"_index":8,"title":{},"body":{"classes/DownloadManager.html":{}}}],["restriction",{"_index":750,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":140,"title":{},"body":{"classes/DownloadManager.html":{}}}],["result",{"_index":437,"title":{},"body":{"classes/SearchManager.html":{}}}],["resultcount",{"_index":491,"title":{},"body":{"classes/SearchManager.html":{}}}],["results",{"_index":169,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":248,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":417,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["retrieves",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":832,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":487,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":482,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":752,"title":{},"body":{"license.html":{}}}],["rows",{"_index":831,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["runs",{"_index":680,"title":{},"body":{"index.html":{}}}],["same",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["save",{"_index":671,"title":{},"body":{"index.html":{}}}],["script",{"_index":251,"title":{},"body":{"interfaces/IStore.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["script).map(key",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script[key",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scriptid",{"_index":290,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["scriptidentifier",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scriptidindex",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scriptidindex[scriptid",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scriptidindexhandler",{"_index":538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scriptidindexvalue",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scriptids",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scriptids.filter",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scriptindex",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scriptobj",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":288,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":182,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["searchable",{"_index":258,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["searchmanager",{"_index":428,"title":{"classes/SearchManager.html":{}},"body":{"classes/SearchManager.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["searchmanager.search(searchstring",{"_index":709,"title":{},"body":{"index.html":{}}}],["searchobj",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["searchpriority",{"_index":372,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["searchresult",{"_index":498,"title":{},"body":{"classes/SearchManager.html":{},"index.html":{}}}],["searchresult.push",{"_index":509,"title":{},"body":{"classes/SearchManager.html":{}}}],["searchstring",{"_index":371,"title":{},"body":{"interfaces/IStore.html":{},"classes/SearchManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["searchstringindex",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["searchstringindexhandler",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchworker",{"_index":473,"title":{},"body":{"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchworker.postmessage",{"_index":478,"title":{},"body":{"classes/SearchManager.html":{}}}],["sec",{"_index":639,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["sec_master_array",{"_index":642,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sec_master_url",{"_index":692,"title":{},"body":{"index.html":{}}}],["sec_segment",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sec_segment.name",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sec_segment.type",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sec_segments",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secmaster",{"_index":463,"title":{},"body":{"classes/SearchManager.html":{}}}],["secmastersegmentkey",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secmasterurl",{"_index":52,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["securities",{"_index":210,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["security",{"_index":12,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["security_master_initialized",{"_index":89,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{}}}],["security_master_not_initialized",{"_index":458,"title":{},"body":{"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segment",{"_index":199,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["segmentdata",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segmentdata.length",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segmentdata[scriptindex",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segmentkey",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segmentkey.includes('equity",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segmentkey.includes('underlying",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segmentkey.split('_",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["segments",{"_index":235,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":759,"title":{},"body":{"license.html":{}}}],["sending",{"_index":450,"title":{},"body":{"classes/SearchManager.html":{}}}],["sends",{"_index":21,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":412,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["setcachecontenthash",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setcachecontenthash(currentcontenthash",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setcachecontenthash(value",{"_index":637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setcacheresponse",{"_index":560,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setcacheresponse(secmasterurl",{"_index":641,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setsecuritymasterinitializationstatus",{"_index":105,"title":{},"body":{"classes/DownloadManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setting",{"_index":396,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{}}}],["setup",{"_index":722,"title":{},"body":{"index.html":{}}}],["shall",{"_index":768,"title":{},"body":{"license.html":{}}}],["shape",{"_index":121,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/typealiases.html":{}}}],["signal",{"_index":418,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["signals",{"_index":405,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["similar",{"_index":320,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["simple",{"_index":723,"title":{},"body":{"index.html":{}}}],["single",{"_index":354,"title":{},"body":{"interfaces/IStore.html":{},"classes/SearchManager.html":{},"miscellaneous/typealiases.html":{}}}],["singleton",{"_index":510,"title":{},"body":{"classes/SearchManager.html":{},"miscellaneous/variables.html":{}}}],["socket",{"_index":185,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":747,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{}}}],["spawns",{"_index":446,"title":{},"body":{"classes/SearchManager.html":{}}}],["specific",{"_index":123,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["specifically",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specified",{"_index":215,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"index.html":{}}}],["specifies",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../derivativesindex.ts",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../downloadmanager.ts",{"_index":810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../downloadworker.ts",{"_index":597,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../error_message.ts",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":595,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../indexhandler.ts",{"_index":809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../isincodeindex.ts",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../memoized.ts",{"_index":807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../script.ts",{"_index":808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../scriptidindex.ts",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../searchmanager.ts",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../searchstringindex.ts",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../searchworker.ts",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../secmaster.ts",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../securitymaster.ts",{"_index":811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../store.ts",{"_index":593,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../utilcache.ts",{"_index":596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/constants/error_message.ts",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/download/downloadmanager.ts",{"_index":6,"title":{},"body":{"classes/DownloadManager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/download/downloadmanager.ts:39",{"_index":44,"title":{},"body":{"classes/DownloadManager.html":{}}}],["src/download/downloadmanager.ts:67",{"_index":77,"title":{},"body":{"classes/DownloadManager.html":{}}}],["src/download/downloadmanager.ts:85",{"_index":63,"title":{},"body":{"classes/DownloadManager.html":{}}}],["src/download/downloadworker.ts",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/download/index.ts",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/download/indexes/derivativesindex.ts",{"_index":533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/download/indexes/isincodeindex.ts",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/download/indexes/scriptidindex.ts",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/download/indexes/searchstringindex.ts",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/index.ts",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/search/searchmanager.ts",{"_index":429,"title":{},"body":{"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/search/searchmanager.ts:104",{"_index":432,"title":{},"body":{"classes/SearchManager.html":{}}}],["src/search/searchmanager.ts:15",{"_index":457,"title":{},"body":{"classes/SearchManager.html":{}}}],["src/search/searchmanager.ts:16",{"_index":431,"title":{},"body":{"classes/SearchManager.html":{}}}],["src/search/searchmanager.ts:33",{"_index":440,"title":{},"body":{"classes/SearchManager.html":{}}}],["src/search/searchmanager.ts:67",{"_index":448,"title":{},"body":{"classes/SearchManager.html":{}}}],["src/search/searchworker.ts",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/secmaster.ts",{"_index":565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/store/index.ts",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/types/config.ts",{"_index":173,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{}}}],["src/types/indexhandler.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/script.ts",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/searchworker.ts",{"_index":389,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{},"coverage.html":{}}}],["src/types/securitymaster.ts",{"_index":197,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/store.ts",{"_index":241,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/utils/cache/utilcache.ts",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/memoized.ts",{"_index":561,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["start",{"_index":409,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["started",{"_index":662,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":87,"title":{},"body":{"classes/DownloadManager.html":{},"classes/SearchManager.html":{},"miscellaneous/typealiases.html":{}}}],["statements",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":86,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{}}}],["step",{"_index":672,"title":{},"body":{"index.html":{}}}],["stop",{"_index":406,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["store",{"_index":29,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["store_keys",{"_index":268,"title":{},"body":{"interfaces/IStore.html":{}}}],["store_keys.derivatives_index",{"_index":384,"title":{},"body":{"interfaces/IStore.html":{}}}],["store_keys.is_security_master_initialized",{"_index":387,"title":{},"body":{"interfaces/IStore.html":{}}}],["store_keys.isin_code_index",{"_index":386,"title":{},"body":{"interfaces/IStore.html":{}}}],["store_keys.master_data",{"_index":382,"title":{},"body":{"interfaces/IStore.html":{}}}],["store_keys.script_id_index",{"_index":383,"title":{},"body":{"interfaces/IStore.html":{}}}],["store_keys.search_string_index",{"_index":385,"title":{},"body":{"interfaces/IStore.html":{}}}],["stored",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stores",{"_index":643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["streamlined",{"_index":719,"title":{},"body":{"index.html":{}}}],["strikeprice",{"_index":324,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":260,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":111,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":764,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":757,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":678,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":769,"title":{},"body":{"license.html":{}}}],["successful",{"_index":698,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["such",{"_index":289,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["suyash",{"_index":731,"title":{},"body":{"index.html":{}}}],["symbol",{"_index":331,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["symbols",{"_index":263,"title":{},"body":{"interfaces/IStore.html":{}}}],["system",{"_index":92,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":586,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":703,"title":{},"body":{"index.html":{}}}],["tailored",{"_index":321,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["task",{"_index":402,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["tasks",{"_index":95,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{}}}],["tderivativesindex",{"_index":363,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["team",{"_index":737,"title":{},"body":{"license.html":{}}}],["term",{"_index":456,"title":{},"body":{"classes/SearchManager.html":{}}}],["terminate",{"_index":410,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["texchange",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["this._flattenresult(workerresults",{"_index":501,"title":{},"body":{"classes/SearchManager.html":{}}}],["this.initialize",{"_index":467,"title":{},"body":{"classes/SearchManager.html":{}}}],["this.onerror",{"_index":152,"title":{},"body":{"classes/DownloadManager.html":{}}}],["this.onmessage",{"_index":150,"title":{},"body":{"classes/DownloadManager.html":{}}}],["this.state",{"_index":469,"title":{},"body":{"classes/SearchManager.html":{}}}],["this.worker",{"_index":141,"title":{},"body":{"classes/DownloadManager.html":{}}}],["this.worker.foreach(workerinstance",{"_index":494,"title":{},"body":{"classes/SearchManager.html":{}}}],["this.worker.length",{"_index":500,"title":{},"body":{"classes/SearchManager.html":{}}}],["this.worker.onerror",{"_index":151,"title":{},"body":{"classes/DownloadManager.html":{}}}],["this.worker.onmessage",{"_index":149,"title":{},"body":{"classes/DownloadManager.html":{}}}],["this.worker.postmessage",{"_index":147,"title":{},"body":{"classes/DownloadManager.html":{}}}],["this.worker.push(searchworker",{"_index":475,"title":{},"body":{"classes/SearchManager.html":{}}}],["thread",{"_index":101,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["through",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throw",{"_index":134,"title":{},"body":{"classes/DownloadManager.html":{}}}],["throws",{"_index":133,"title":{},"body":{"classes/DownloadManager.html":{}}}],["ticksize",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ties",{"_index":200,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{}}}],["tindexhandler",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tindexhandlers",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tinstrumenttype",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tisincode",{"_index":375,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tisincodeindex",{"_index":381,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tmasterdata",{"_index":335,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tmasterdataderivatives",{"_index":333,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tmasterdataderivativesscript",{"_index":327,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tmasterdataequity",{"_index":294,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tmasterdatasegmentkeys",{"_index":282,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tmasterdataunderlying",{"_index":322,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tmessageevent",{"_index":125,"title":{},"body":{"classes/DownloadManager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["todo",{"_index":107,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":789,"title":{},"body":{"license.html":{}}}],["totaldata",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["traded",{"_index":211,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{}}}],["trigger",{"_index":30,"title":{},"body":{"classes/DownloadManager.html":{}}}],["triggers",{"_index":400,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["true",{"_index":181,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["try",{"_index":695,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tscriptid",{"_index":286,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tscriptidindex",{"_index":360,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tscriptidindexvalue",{"_index":357,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tscriptpopulate",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsearchchunkid",{"_index":367,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tsearchstringindex",{"_index":370,"title":{},"body":{"interfaces/IStore.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tsecsegmentstructuretype",{"_index":214,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tsecsegmenttypes",{"_index":208,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":50,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IConfig.html":{},"interfaces/ISecSegmentStructureMapType.html":{},"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":805,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":124,"title":{},"body":{"classes/DownloadManager.html":{}}}],["typeof",{"_index":284,"title":{},"body":{"interfaces/IStore.html":{}}}],["types",{"_index":234,"title":{},"body":{"interfaces/ISecSegmentStructureMapType.html":{},"miscellaneous/typealiases.html":{}}}],["types/config",{"_index":106,"title":{},"body":{"classes/DownloadManager.html":{}}}],["typescript",{"_index":378,"title":{},"body":{"interfaces/IStore.html":{}}}],["typescript/javascript",{"_index":687,"title":{},"body":{"index.html":{}}}],["typically",{"_index":419,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["unblocked",{"_index":715,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":379,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/variables.html":{}}}],["underlying",{"_index":319,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["underlyingid",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unerlying",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unexpected",{"_index":76,"title":{},"body":{"classes/DownloadManager.html":{}}}],["up",{"_index":397,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{}}}],["update",{"_index":27,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{}}}],["updated",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updates",{"_index":609,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":53,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["url('./downloadworker.js",{"_index":144,"title":{},"body":{"classes/DownloadManager.html":{}}}],["url('./searchworker.js",{"_index":474,"title":{},"body":{"classes/SearchManager.html":{}}}],["use",{"_index":512,"title":{},"body":{"classes/SearchManager.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":245,"title":{},"body":{"interfaces/IStore.html":{},"interfaces/IWorkerConstantsOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["useful",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":15,"title":{},"body":{"classes/DownloadManager.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":706,"title":{},"body":{"index.html":{}}}],["utility",{"_index":664,"title":{},"body":{"index.html":{},"properties.html":{}}}],["utility.git",{"_index":804,"title":{},"body":{"properties.html":{}}}],["valid",{"_index":55,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":62,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IStore.html":{},"classes/SearchManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":518,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":842,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":243,"title":{},"body":{"interfaces/IStore.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":796,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["waits",{"_index":451,"title":{},"body":{"classes/SearchManager.html":{}}}],["warranties",{"_index":776,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":771,"title":{},"body":{"license.html":{}}}],["web",{"_index":16,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["whether",{"_index":190,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/IStore.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["within",{"_index":427,"title":{},"body":{"interfaces/IWorkerConstantsOptions.html":{}}}],["without",{"_index":98,"title":{},"body":{"classes/DownloadManager.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["worker",{"_index":17,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{},"classes/SearchManager.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["worker's",{"_index":59,"title":{},"body":{"classes/DownloadManager.html":{},"interfaces/IWorkerConstantsOptions.html":{}}}],["worker(new",{"_index":143,"title":{},"body":{"classes/DownloadManager.html":{}}}],["worker_constants_options",{"_index":460,"title":{},"body":{"classes/SearchManager.html":{}}}],["worker_constants_options.init",{"_index":481,"title":{},"body":{"classes/SearchManager.html":{}}}],["workerindex",{"_index":497,"title":{},"body":{"classes/SearchManager.html":{}}}],["workerinstance.onmessage",{"_index":496,"title":{},"body":{"classes/SearchManager.html":{}}}],["workerinstance.postmessage",{"_index":495,"title":{},"body":{"classes/SearchManager.html":{}}}],["workerresult.foreach((resultitem",{"_index":507,"title":{},"body":{"classes/SearchManager.html":{}}}],["workerresults",{"_index":438,"title":{},"body":{"classes/SearchManager.html":{}}}],["workerresults.foreach(workerresult",{"_index":506,"title":{},"body":{"classes/SearchManager.html":{}}}],["workerresults[workerindex",{"_index":499,"title":{},"body":{"classes/SearchManager.html":{}}}],["workers",{"_index":436,"title":{},"body":{"classes/SearchManager.html":{}}}],["yes",{"_index":649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yesterdayopenint",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/DownloadManager.html":{"url":"classes/DownloadManager.html","title":"class - DownloadManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DownloadManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Download/DownloadManager.ts\n        \n\n\n            \n                Description\n            \n            \n                Class responsible for managing the download and processing of security master data.\nThis class uses a web worker to handle downloading and processing data in the background.\nIt sends messages to the worker to initialize the process, and handles messages back from the worker\nto update the application's store and trigger necessary events when the download is complete.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onError\n                            \n                            \n                                onMessage\n                            \n                            \n                                worker\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(secMasterURL: string, config: IConfig)\n                    \n                \n                        \n                            \n                                Defined in src/Download/DownloadManager.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadManager.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        secMasterURL\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe URL to fetch the security master data from. Must be a valid URL.\n\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        IConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nConfiguration object defining the worker's behavior.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        onError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/Download/DownloadManager.ts:85\n                        \n                    \n\n            \n                \n                    Handles errors from the worker.\nLogs the error and provides a grouped console output for easier debugging.\nDevelopers should monitor for this in case of unexpected worker behavior.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/Download/DownloadManager.ts:67\n                        \n                    \n\n            \n                \n                    Handles messages received from the worker.\nProcesses the 'INDEXES_CREATED' action to:\n\nAdd the processed security master data with indexes to the application's store.\nUpdate the security master initialization status in the application's state.\nDispatch the SECURITY_MASTER_INITIALIZED event to notify the system.\n\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    event\n                                                    \n                                                            \nThe event object containing the message data from the worker.\nProcesses the 'INDEXES_CREATED' action to:\nAdd the processed security master data with indexes to the application's store.\nUpdate the security master initialization status in the application's state.\nDispatch the SECURITY_MASTER_INITIALIZED event to notify the system.\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        worker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Worker\n\n                    \n                \n                    \n                        \n                                Defined in src/Download/DownloadManager.ts:39\n                        \n                    \n\n            \n                \n                    Web Worker instance responsible for downloading and processing security master data\nHandles background tasks including data fetching and processing without blocking the main thread\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SECURITY_MASTER_INITIALIZED } from '../Constants/EVENTS'\nimport { addStore, setSecurityMasterInitializationStatus } from '../store'\nimport { IConfig } from '../TYPES/Config'\n\n// TODO: move this to another file\n/**\n * Type representing the structure of messages received from the worker.\n *\n * This type defines the structure of the messages that the main thread receives from the web worker.\n * It includes an `action` string that identifies the type of message, and an optional `data` field\n * which contains additional information related to the action. The shape of `data` depends on the specific action.\n *\n * @typedef {Object} TMessageEvent\n * @property {string} action - The type of message or action being communicated from the worker.\n * @property {any} [data] - Optional data associated with the action. The structure of the data depends on the action.\n */\ntype TMessageEvent = {\n  action: string\n  data?: any\n}\n\n/**\n * Class responsible for managing the download and processing of security master data.\n *\n * This class uses a web worker to handle downloading and processing data in the background.\n * It sends messages to the worker to initialize the process, and handles messages back from the worker\n * to update the application's store and trigger necessary events when the download is complete.\n *\n * @class DownloadManager\n */\nexport default class DownloadManager {\n  /**\n   * Web Worker instance responsible for downloading and processing security master data\n   *\n   * @private\n   * @type {Worker}\n   * Handles background tasks including data fetching and processing without blocking the main thread\n   */\n  worker: Worker\n  /**\n   * Creates an instance of DownloadManager.\n   *\n   * @param {string} secMasterURL - The URL to fetch the security master data from. Must be a valid URL.\n   * @param {IConfig} config - Configuration object defining the worker's behavior.\n   * @throws Will throw an error if the worker cannot be initialized due to invalid arguments or browser restrictions.\n   */\n  constructor(secMasterURL: string, config: IConfig) {\n    this.worker = new Worker(new URL('./DownloadWorker.js', import.meta.url), {\n      type: 'module'\n    })\n\n    this.worker.postMessage({ action: 'INIT', data: { config, secMasterURL } })\n    this.worker.onmessage = this.onMessage\n    this.worker.onerror = this.onError\n  }\n\n  /**\n   * Handles messages received from the worker.\n   *\n   * @param {MessageEvent} event - The event object containing the message data from the worker.\n   * Processes the 'INDEXES_CREATED' action to:\n   * - Add the processed security master data with indexes to the application's store.\n   * - Update the security master initialization status in the application's state.\n   * - Dispatch the `SECURITY_MASTER_INITIALIZED` event to notify the system.\n   *\n   */\n  onMessage = (event: MessageEvent) => {\n    const { action } = event.data\n    if (action === 'INDEXES_CREATED') {\n      const masterDataWithIndexes = event.data?.data\n      // TODO: kept this for initial debug - remove it later\n      addStore(masterDataWithIndexes)\n      setSecurityMasterInitializationStatus()\n      dispatchEvent(new Event(SECURITY_MASTER_INITIALIZED))\n    }\n  }\n\n  /**\n   * Handles errors from the worker.\n   *\n   * Logs the error and provides a grouped console output for easier debugging.\n   * Developers should monitor for this in case of unexpected worker behavior.\n   *\n   */\n  onError = () => {\n    console.group('Error in worker')\n    console.log('error')\n    console.groupEnd()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfig.html":{"url":"interfaces/IConfig.html","title":"interface - IConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES/Config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration interface for modules required in the application.\nThis interface allows defining which modules should be included or required\nbased on the needs of the application.\nIf true, the search module will be included in the application, otherwise it will be excluded.\nIf true, the socket module will be included in the application, otherwise it will be excluded.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            requireSearchModule\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            requireSocketModule\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requireSearchModule\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requireSearchModule:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates whether the search module should be included in the application.\nIf true, the application will load and enable the search module's functionality.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requireSocketModule\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requireSocketModule:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates whether the socket module should be included in the application.\nIf true, the application will initialize and enable socket-based communication.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IConfig {\n  /**\n   * Indicates whether the search module should be included in the application.\n   * If true, the application will load and enable the search module's functionality.\n   *\n   * @type {?boolean}\n   */\n  requireSearchModule?: boolean\n  /**\n   * Indicates whether the socket module should be included in the application.\n   * If true, the application will initialize and enable socket-based communication.\n   *\n   * @type {?boolean}\n   */\n  requireSocketModule?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISecSegmentStructureMapType.html":{"url":"interfaces/ISecSegmentStructureMapType.html","title":"interface - ISecSegmentStructureMapType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISecSegmentStructureMapType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES/SecurityMaster.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the mapping of a security segment to its structure type.\nThis interface ties a specific security segment type (e.g., NSE_EQ_EQUITY) to a structure type\n(e.g., FLAT_EQUITY, NESTED) to determine how the data for that segment is organized and represented.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         TSecSegmentTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TSecSegmentTypes\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of security segment, representing a category of securities traded in specific exchanges or markets.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TSecSegmentStructureType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TSecSegmentStructureType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The structure type that defines how the data for the specified security segment is organized.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TSecSegmentTypes =\n  | 'NSE_EQ_EQUITY'\n  | 'BSE_EQ_EQUITY'\n  | 'NSE_FO_FUTSTK'\n  | 'NSE_FO_FUTIDX'\n  | 'NSE_FO_OPTIDX'\n  | 'NSE_FO_OPTSTK'\n  | 'NSE_CURR_FUTCUR'\n  | 'NSE_CURR_OPTCUR'\n  | 'MCX_COMM_OPTFUT'\n  | 'MCX_COMM_FUTCOM'\n  | 'NCDEX_COMM_OPTFUT'\n  | 'NCDEX_COMM_FUTCOM'\n  | 'NSE_CURR_UNDERLYING'\n  | 'MCX_COMM_UNDERLYING'\n  | 'NCDEX_COMM_UNDERLYING'\n  | 'NSE_EQ_UNDERLYING'\n  | 'BSE_EQ_UNDERLYING'\n\n/**\n * Represents the possible structure types of security segments, defining how the data is organized.\n * The structure type determines how the information for a specific security segment is represented.\n *\n * @type {TSecSegmentStructureType}\n * @enum\n * @readonly\n */\ntype TSecSegmentStructureType = 'FLAT_EQUITY' | 'FLAT_UNDERLYING' | 'NESTED'\n\n/**\n * Interface representing the mapping of a security segment to its structure type.\n * This interface ties a specific security segment type (e.g., NSE_EQ_EQUITY) to a structure type\n * (e.g., FLAT_EQUITY, NESTED) to determine how the data for that segment is organized and represented.\n *\n * @interface ISecSegmentStructureMapType\n *\n * @property {TSecSegmentTypes} name - The security segment type (e.g., NSE_EQ_EQUITY, BSE_EQ_EQUITY).\n * @property {TSecSegmentStructureType} type - The structure type associated with the segment (e.g., FLAT_EQUITY, NESTED).\n */\nexport interface ISecSegmentStructureMapType {\n  /**\n   * The type of security segment, representing a category of securities traded in specific exchanges or markets.\n   *\n   * @type {TSecSegmentTypes}\n   */\n  name: TSecSegmentTypes\n  /**\n   * The structure type that defines how the data for the specified security segment is organized.\n   *\n   * @type {TSecSegmentStructureType}\n   */\n  type: TSecSegmentStructureType\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStore.html":{"url":"interfaces/IStore.html","title":"interface - IStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES/Store.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the store that holds various indices and master data.\nThis is used for efficient data access and retrieval.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                \n                                \n                                \n                                \n                                \n                                \n                                \n                                \n                                \n                                \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n\n\n\n\n\n\n                            \n                                \n                                    Represents the complete master data for all security segments, organized by the MASTER_DATA_SEGMENTS enum.\n\n                                \n                            \n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                            \n                                \n                                    Maps script IDs to their corresponding indices in the master data segments.\n\n                                \n                            \n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                            \n                                \n                                    Organizes derivative script IDs by type (futures or options) for efficient access.\n\n                                \n                            \n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                            \n                                \n                                    Provides a searchable index for chunked master data, including search strings, priorities, and corresponding exchange symbols.\n\n                                \n                            \n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                            \n                                \n                                    Maps ISIN codes to their associated script IDs for efficient lookup.\n\n                                \n                            \n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                            \n                                \n                                    Indicates whether the security master data has been fully initialized.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { STORE_KEYS } from '../Constants/STORE_KEYS'\nimport { IScript } from './Script'\n\n/**\n * Enum representing the different segments of master data for securities.\n * These segments correspond to various asset classes (equity, derivatives, etc.)\n * on different exchanges (NSE, BSE, MCX, NCDEX).\n *\n * @enum {string}\n * @readonly\n */\nexport enum MASTER_DATA_SEGMENTS {\n  NSE_EQ_EQUITY = 'NSE_EQ_EQUITY',\n  BSE_EQ_EQUITY = 'BSE_EQ_EQUITY',\n  NSE_FO_FUTSTK = 'NSE_FO_FUTSTK',\n  NSE_FO_FUTIDX = 'NSE_FO_FUTIDX',\n  NSE_FO_OPTIDX = 'NSE_FO_OPTIDX',\n  NSE_FO_OPTSTK = 'NSE_FO_OPTSTK',\n  NSE_CURR_FUTCUR = 'NSE_CURR_FUTCUR',\n  NSE_CURR_OPTCUR = 'NSE_CURR_OPTCUR',\n  MCX_COMM_OPTFUT = 'MCX_COMM_OPTFUT',\n  MCX_COMM_FUTCOM = 'MCX_COMM_FUTCOM',\n  NCDEX_COMM_OPTFUT = 'NCDEX_COMM_OPTFUT',\n  NCDEX_COMM_FUTCOM = 'NCDEX_COMM_FUTCOM',\n  NSE_CURR_UNDERLYING = 'NSE_CURR_UNDERLYING',\n  MCX_COMM_UNDERLYING = 'MCX_COMM_UNDERLYING',\n  NCDEX_COMM_UNDERLYING = 'NCDEX_COMM_UNDERLYING',\n  NSE_EQ_UNDERLYING = 'NSE_EQ_UNDERLYING',\n  BSE_EQ_UNDERLYING = 'BSE_EQ_UNDERLYING'\n}\n\n/**\n * Type for the keys of the MASTER_DATA_SEGMENTS enum.\n * Represents the valid segment keys in the master data.\n *\n * @type {TMasterDataSegmentKeys}\n */\nexport type TMasterDataSegmentKeys = keyof typeof MASTER_DATA_SEGMENTS\n\n/**\n * Type representing the script ID from the IScript interface.\n *\n * @type {TScriptId}\n */\ntype TScriptId = IScript['scriptId']\n\n/**\n * Type representing the structure of master data for equity securities.\n * It contains various properties related to equity scripts such as scriptId, coName, lotSize, and more.\n *\n * @type {TMasterDataEquity}\n */\nexport type TMasterDataEquity = [\n  TScriptId,\n  IScript['odinTokenId'],\n  IScript['exchangeSecurityId'],\n  IScript['aslAllowed'],\n  IScript['exchangeSymbol'],\n  IScript['exchangeSeries'],\n  IScript['isinCode'],\n  IScript['coName'],\n  IScript['lotSize'],\n  IScript['tickSize'],\n  IScript['nriAllowed'],\n  IScript['closePrice'],\n  IScript['assetClass'],\n  IScript['searchable'],\n  IScript['searchPriority'],\n  IScript['yesterdayOpenInt'],\n  IScript['maxSingleOrderQty'],\n  IScript['underlying'],\n  IScript['asmFlag'],\n  IScript['odinLlfcSegmentId'],\n  IScript['cmotsCoCode'],\n  IScript['dprLow'],\n  IScript['dprHigh'],\n  IScript['fiftyTwoWeekLow'],\n  IScript['fiftyTwoWeekHigh']\n]\n\n/**\n * Type representing the structure of master data for underlying securities.\n * It contains similar properties as equity but tailored for underlying securities.\n *\n * @type {TMasterDataUnderlying}\n */\nexport type TMasterDataUnderlying = [\n  TScriptId,\n  IScript['odinTokenId'],\n  IScript['exchangeSecurityId'],\n  IScript['aslAllowed'],\n  IScript['exchangeSymbol'],\n  IScript['coName'],\n  IScript['lotSize'],\n  IScript['tickSize'],\n  IScript['nriAllowed'],\n  IScript['closePrice'],\n  IScript['assetClass'],\n  IScript['searchable'],\n  IScript['searchPriority'],\n  IScript['yesterdayOpenInt'],\n  IScript['underlying'],\n  IScript['asmFlag'],\n  IScript['odinLlfcSegmentId'],\n  IScript['cmotsCoCode'],\n  IScript['dprLow'],\n  IScript['dprHigh'],\n  IScript['fiftyTwoWeekLow'],\n  IScript['fiftyTwoWeekHigh']\n]\n\n/**\n * Type representing the structure of master data for derivatives scripts.\n * Includes specific properties like expiryDate, strikePrice, and optionType for derivative instruments.\n *\n * @type {TMasterDataDerivativesScript}\n */\nexport type TMasterDataDerivativesScript = [\n  TScriptId,\n  IScript['odinTokenId'],\n  IScript['exchangeSecurityId'],\n  IScript['aslAllowed'],\n  IScript['coName'],\n  IScript['expiryDate'],\n  IScript['strikePrice'],\n  IScript['optionType'],\n  IScript['lotSize'],\n  IScript['tickSize'],\n  IScript['nriAllowed'],\n  IScript['closePrice'],\n  IScript['searchable'],\n  IScript['searchPriority'],\n  IScript['yesterdayOpenInt'],\n  IScript['maxSingleOrderQty'],\n  IScript['underlying'],\n  IScript['asmFlag'],\n  IScript['odinLlfcSegmentId'],\n  IScript['cmotsCoCode'],\n  IScript['dprLow'],\n  IScript['dprHigh'],\n  IScript['fiftyTwoWeekLow'],\n  IScript['fiftyTwoWeekHigh']\n]\n\n/**\n * Represents the data structure for derivatives in the system.\n * This type includes information about the exchange symbol, underlying asset,\n * asset class, and an array of derivative scripts associated with the derivative.\n */\nexport type TMasterDataDerivatives = [\n  IScript['exchangeSymbol'],\n  IScript['underlying'],\n  IScript['assetClass'],\n  TMasterDataDerivativesScript[]\n]\n\n/**\n * Type representing master data for derivative instruments, including a list of derivative scripts.\n *\n * @type {TMasterDataDerivatives}\n */\nexport type TMasterData = {\n  [MASTER_DATA_SEGMENTS.NSE_EQ_EQUITY]?: TMasterDataEquity[]\n  [MASTER_DATA_SEGMENTS.BSE_EQ_EQUITY]?: TMasterDataEquity[]\n  [MASTER_DATA_SEGMENTS.NSE_FO_FUTSTK]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.NSE_FO_FUTIDX]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.NSE_FO_OPTIDX]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.NSE_FO_OPTSTK]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.NSE_CURR_FUTCUR]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.NSE_CURR_OPTCUR]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.MCX_COMM_OPTFUT]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.MCX_COMM_FUTCOM]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.NCDEX_COMM_OPTFUT]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.NCDEX_COMM_FUTCOM]?: TMasterDataDerivatives[]\n  [MASTER_DATA_SEGMENTS.NSE_CURR_UNDERLYING]?: TMasterDataUnderlying[]\n  [MASTER_DATA_SEGMENTS.MCX_COMM_UNDERLYING]?: TMasterDataUnderlying[]\n  [MASTER_DATA_SEGMENTS.NCDEX_COMM_UNDERLYING]?: TMasterDataUnderlying[]\n  [MASTER_DATA_SEGMENTS.NSE_EQ_UNDERLYING]?: TMasterDataUnderlying[]\n  [MASTER_DATA_SEGMENTS.BSE_EQ_UNDERLYING]?: TMasterDataUnderlying[]\n}\n\n/**\n * Type representing the index for script IDs. This is used to store a reference to the master data segment\n * and the index value (could be a single or multi-level index).\n *\n * @type {TScriptIdIndexValue}\n */\nexport type TScriptIdIndexValue =\n  | [MASTER_DATA_SEGMENTS, number]\n  | [MASTER_DATA_SEGMENTS, number, number, number]\n\n/**\n * Type representing an index of script IDs.\n * Maps each script ID to its corresponding index value.\n *\n * @type {TScriptIdIndex}\n */\nexport type TScriptIdIndex = {\n  [key: TScriptId]: TScriptIdIndexValue\n}\n\n/**\n * Type representing an index for derivatives, including both futures and options.\n * It organizes derivative script IDs by type (FUTURES and OPTIONS).\n *\n * @type {TDerivativesIndex}\n */\nexport type TDerivativesIndex = {\n  [key: TScriptId]: {\n    FUTURES: TScriptId[]\n    OPTIONS: TScriptId[]\n  }\n}\n\n/**\n * Type representing a search chunk identifier.\n * This is used for efficient indexing and retrieval of search results.\n *\n * @type {TSearchChunkId}\n */\nexport type TSearchChunkId = number\n\n/**\n * Type representing a searchable index for chunked data.\n * It maps each search chunk to its relevant search string, data, search priority, and exchange symbol.\n *\n * @type {TSearchStringIndex}\n */\nexport type TSearchStringIndex = {\n  [key: TSearchChunkId]: {\n    searchString: IScript['searchable']\n    data: TScriptIdIndexValue\n    searchPriority: IScript['searchPriority']\n    exchangeSymbol: IScript['exchangeSymbol']\n  }[]\n}\n\n/**\n * Type representing the ISIN code for a security.\n * This is used for indexing securities by their ISIN code.\n *\n * @type {TIsinCode}\n */\ntype TIsinCode = string // IScript['isinCode'] // TODO: Figure out typescript to remove undefined or null\n\n/**\n * Type representing an index of ISIN codes.\n * Maps each ISIN code to a list of script IDs associated with it.\n *\n * @type {TIsinCodeIndex}\n */\nexport type TIsinCodeIndex = {\n  [key: TIsinCode]: TScriptId[]\n}\n\n/**\n * Interface representing the store that holds various indices and master data.\n * This is used for efficient data access and retrieval.\n *\n * @interface IStore\n */\nexport interface IStore {\n  /**\n   * Represents the complete master data for all security segments, organized by the MASTER_DATA_SEGMENTS enum.\n   *\n   * @type {?TMasterData}\n   */\n  [STORE_KEYS.MASTER_DATA]?: TMasterData\n  /**\n   * Maps script IDs to their corresponding indices in the master data segments.\n   *\n   * @type {?TScriptIdIndex}\n   */\n  [STORE_KEYS.SCRIPT_ID_INDEX]?: TScriptIdIndex\n  /**\n   * Organizes derivative script IDs by type (futures or options) for efficient access.\n   *\n   * @type {?TDerivativesIndex}\n   */\n  [STORE_KEYS.DERIVATIVES_INDEX]?: TDerivativesIndex\n  /**\n   * Provides a searchable index for chunked master data, including search strings, priorities, and corresponding exchange symbols.\n   *\n   * @type {?TSearchStringIndex}\n   */\n  [STORE_KEYS.SEARCH_STRING_INDEX]?: TSearchStringIndex\n  /**\n   * Maps ISIN codes to their associated script IDs for efficient lookup.\n   *\n   * @type {?TIsinCodeIndex}\n   */\n  [STORE_KEYS.ISIN_CODE_INDEX]?: TIsinCodeIndex\n  /**\n   * Indicates whether the security master data has been fully initialized.\n   *\n   * @type {?boolean}\n   */\n  [STORE_KEYS.IS_SECURITY_MASTER_INITIALIZED]?: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWorkerConstantsOptions.html":{"url":"interfaces/IWorkerConstantsOptions.html","title":"interface - IWorkerConstantsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWorkerConstantsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES/SearchWorker.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the structure of constants used to interact with a web worker.\nEach property represents a specific action or lifecycle event for the worker.\nThese constants help ensure consistency when managing the worker's lifecycle\nand communication with the main thread.\nThis action is used when setting up or preparing the worker for execution.\nThis action triggers the worker to begin its task or processing.\nThis action is used when the worker is required to perform a search operation.\nThis action signals the worker to stop its execution and clean up resources.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            terminate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The constant used to initialize the worker. It indicates that\nthe worker is being set up or prepared for execution.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The constant used to instruct the worker to perform a search operation.\nThis is commonly used when the worker is expected to process and retrieve specific data.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The constant used to signal the worker to start its main task.\nThis is typically called after initialization to commence processing.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        terminate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        terminate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The constant used to terminate the worker's execution. It ensures\nproper cleanup and halts any ongoing tasks within the worker.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IWorkerConstantsOptions {\n  /**\n   * The constant used to initialize the worker. It indicates that\n   * the worker is being set up or prepared for execution.\n   *\n   * @type {string}\n   */\n  init: string\n  /**\n   * The constant used to signal the worker to start its main task.\n   * This is typically called after initialization to commence processing.\n   *\n   * @type {string}\n   */\n  start: string\n  /**\n   * The constant used to instruct the worker to perform a search operation.\n   * This is commonly used when the worker is expected to process and retrieve specific data.\n   *\n   * @type {string}\n   */\n  search: string\n  /**\n   * The constant used to terminate the worker's execution. It ensures\n   * proper cleanup and halts any ongoing tasks within the worker.\n   *\n   * @type {string}\n   */\n  terminate: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchManager.html":{"url":"classes/SearchManager.html","title":"class - SearchManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Search/SearchManager.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _flattenResult\n                            \n                            \n                                initialize\n                            \n                            \n                                search\n                            \n                            \n                                STATE\n                            \n                            \n                                WORKER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/Search/SearchManager.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _flattenResult\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/Search/SearchManager.ts:104\n                        \n                    \n\n            \n                \n                    Combines and enriches raw results from all workers into a single result array.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    workerResults\n                                                    \n                                                            \nRaw result arrays from workers\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/Search/SearchManager.ts:33\n                        \n                    \n\n            \n                \n                    Initializes the search manager:\n\nChanges state to READY\nFetches chunked index data\nSpawns a Web Worker per chunk\nSends the chunk data to each worker\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/Search/SearchManager.ts:67\n                        \n                    \n\n            \n                \n                    Initiates a search by sending the search string to all workers.\nWaits for all responses, then flattens and resolves the final search result.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    searchString\n                                                    \n                                                            \nThe term to search for\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"INIT\" | \"READY\"\n\n                    \n                \n                \n                    \n                        Default value : 'INIT'\n                    \n                \n                    \n                        \n                                Defined in src/Search/SearchManager.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WORKER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Worker[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/Search/SearchManager.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SECURITY_MASTER_NOT_INITIALIZED } from '../Constants/ERROR_MESSAGE'\nimport { SECURITY_MASTER_INITIALIZED } from '../Constants/EVENTS'\nimport { WORKER_CONSTANTS_OPTIONS } from '../Constants/SEARCH_WORKER'\nimport { getScriptByScriptIdIndexValue } from '../secMaster'\nimport { getSearchIndex, getSecurityMasterInitializationStatus } from '../store'\n\nclass SearchManager {\n  STATE: 'INIT' | 'READY' = 'INIT'\n  WORKER: Worker[] = []\n  constructor() {\n    const IS_SECURITY_MASTER_LOADED = getSecurityMasterInitializationStatus()\n    if (IS_SECURITY_MASTER_LOADED) {\n      this.initialize()\n    } else {\n      addEventListener(SECURITY_MASTER_INITIALIZED, this.initialize)\n    }\n  }\n\n  /**\n   * Initializes the search manager:\n   * - Changes state to READY\n   * - Fetches chunked index data\n   * - Spawns a Web Worker per chunk\n   * - Sends the chunk data to each worker\n   */\n  initialize = () => {\n    this.STATE = 'READY'\n\n    // get Chunks from secmaster\n    const chunks = getSearchIndex()\n\n    if (chunks) {\n      // loop on chunks and add workers to WORKER\n      Object.values(chunks).forEach((chunk, index) => {\n        const searchWorker = new Worker(\n          new URL('./SearchWorker.js', import.meta.url),\n          {\n            type: 'module'\n          }\n        )\n        this.WORKER.push(searchWorker)\n        // postmessage on workers to pass chunk data and index with initialize event\n        searchWorker.postMessage({\n          payload: chunk,\n          index,\n          actionType: WORKER_CONSTANTS_OPTIONS.init\n        })\n      })\n    }\n  }\n\n  /**\n   * Initiates a search by sending the search string to all workers.\n   * Waits for all responses, then flattens and resolves the final search result.\n   *\n   * @param searchString - The term to search for\n   * @returns Promise resolving to an array of matched search results\n   */\n\n  search = async (searchString: string) => {\n    return new Promise(resolve => {\n      if (!getSecurityMasterInitializationStatus()) {\n        console.warn(SECURITY_MASTER_NOT_INITIALIZED)\n        resolve([])\n      }\n\n      const workerResults: any[] = []\n      let resultCount = 0\n      // loop on workers and post message search event with search string\n      this.WORKER.forEach(workerInstance => {\n        workerInstance.postMessage({\n          actionType: 'SEARCH',\n          searchString\n        })\n\n        workerInstance.onmessage = (event: MessageEvent) => {\n          const { data } = event\n          ++resultCount\n          const { workerIndex, searchResult } = data\n          workerResults[workerIndex] = searchResult\n          if (resultCount === this.WORKER.length) {\n            const searchResult = this._flattenResult(workerResults)\n            console.log(searchResult, 'searchResult')\n            resolve(searchResult)\n          }\n        }\n      })\n    })\n  }\n\n  /**\n   * Combines and enriches raw results from all workers into a single result array.\n   *\n   * @param workerResults - Raw result arrays from workers\n   * @returns Flattened and enriched result array\n   */\n  _flattenResult = (workerResults: any[]) => {\n    const searchResult: any[] = []\n\n    workerResults.forEach(workerResult => {\n      workerResult.forEach((resultItem: any) => {\n        const script = getScriptByScriptIdIndexValue(resultItem.obj.data)\n        searchResult.push({ ...script })\n      })\n    })\n    return searchResult\n  }\n}\n\n/**\n * Singleton instance of SearchManager exported for use across app.\n */\nconst searchManager = new SearchManager()\nexport { searchManager }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/Constants/ERROR_MESSAGE.ts\n            \n            variable\n            SECURITY_MASTER_NOT_INITIALIZED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Download/DownloadManager.ts\n            \n            class\n            DownloadManager\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/Download/DownloadManager.ts\n            \n            type alias\n            TMessageEvent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/DownloadWorker.ts\n            \n            function\n            generateIndexesAndPostMessage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/DownloadWorker.ts\n            \n            variable\n            createIndexes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/DownloadWorker.ts\n            \n            variable\n            fetchOnlyHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/DownloadWorker.ts\n            \n            variable\n            fetchSecurityMaster\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/index.ts\n            \n            function\n            initializeDownload\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/index.ts\n            \n            variable\n            DEFAULT_VALUES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/indexes/derivativesIndex.ts\n            \n            variable\n            derivativesIndexHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/indexes/isinCodeIndex.ts\n            \n            variable\n            isinCodeIndexHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/indexes/scriptIdIndex.ts\n            \n            variable\n            scriptIdIndexHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Download/indexes/searchStringIndex.ts\n            \n            variable\n            searchStringIndexHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Search/SearchManager.ts\n            \n            class\n            SearchManager\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                        src/Search/SearchManager.ts\n            \n            variable\n            searchManager\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Search/SearchWorker.ts\n            \n            variable\n            searchWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/TYPES/Config.ts\n            \n            interface\n            IConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/TYPES/IndexHandler.ts\n            \n            type alias\n            TIndexHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/IndexHandler.ts\n            \n            type alias\n            TIndexHandlers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/TYPES/Script.ts\n            \n            interface\n            IScript\n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                        src/TYPES/Script.ts\n            \n            type alias\n            TExchange\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Script.ts\n            \n            type alias\n            TInstrumentType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Script.ts\n            \n            type alias\n            TScriptPopulate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/TYPES/SearchWorker.ts\n            \n            interface\n            IWorkerConstantsOptions\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/TYPES/SecurityMaster.ts\n            \n            interface\n            ISecSegmentStructureMapType\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/TYPES/SecurityMaster.ts\n            \n            type alias\n            TSecSegmentStructureType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/SecurityMaster.ts\n            \n            type alias\n            TSecSegmentTypes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/TYPES/Store.ts\n            \n            interface\n            IStore\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TDerivativesIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TIsinCode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TIsinCodeIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TMasterData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TMasterDataDerivatives\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TMasterDataDerivativesScript\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TMasterDataEquity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TMasterDataSegmentKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TMasterDataUnderlying\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TScriptId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TScriptIdIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TScriptIdIndexValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TSearchChunkId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/TYPES/Store.ts\n            \n            type alias\n            TSearchStringIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Utils/Cache/UtilCache.ts\n            \n            function\n            checkIfContentHashIsSame\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Utils/Cache/UtilCache.ts\n            \n            function\n            getCacheResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Utils/Cache/UtilCache.ts\n            \n            function\n            getContentHashFromHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Utils/Cache/UtilCache.ts\n            \n            function\n            getLastCachedContentHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Utils/Cache/UtilCache.ts\n            \n            function\n            setCacheContentHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Utils/Cache/UtilCache.ts\n            \n            function\n            setCacheResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/Utils/memoized.ts\n            \n            type alias\n            AnyFunction\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/index.ts\n            \n            function\n            initialize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/index.ts\n            \n            function\n            isSecurityMasterLoaded\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/index.ts\n            \n            variable\n            DEFAULT_VALUES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            _getScripByScripId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            _getSegmentDetails\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            _mapFlattenDerivativeScriptToScript\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            _mapFlattenEquityScriptToScript\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            _mapFlattenUnderlingScriptToScript\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            getDerivativeScripsByScripId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            getScripByScripId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            getScripsByIsinCode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            getScripsByScripIds\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/secMaster.ts\n            \n            variable\n            getScriptByScriptIdIndexValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            addDerivativeIndexes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            addIsinCodeIndexex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            addMasterData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            addScripIdIndexes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            addSearchStringIndexes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            addStore\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            getDerivativeIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            getIsinIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            getMasterData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            getScripIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            getSearchIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            getSecurityMasterInitializationStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            function\n            setSecurityMasterInitializationStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/store/index.ts\n            \n            variable\n            store\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            fuzzysort : ^3.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MASTER_DATA_SEGMENTS   (src/.../Store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/TYPES/Store.ts\n    \n        \n            \n                \n                    \n                        \n                        MASTER_DATA_SEGMENTS\n                    \n                \n                    \n                        \n                            Enum representing the different segments of master data for securities.\nThese segments correspond to various asset classes (equity, derivatives, etc.)\non different exchanges (NSE, BSE, MCX, NCDEX).\n\n                        \n                    \n                        \n                            \n                                 NSE_EQ_EQUITY\n                            \n                        \n                        \n                            \n                                Value : NSE_EQ_EQUITY\n                            \n                        \n                        \n                            \n                                 BSE_EQ_EQUITY\n                            \n                        \n                        \n                            \n                                Value : BSE_EQ_EQUITY\n                            \n                        \n                        \n                            \n                                 NSE_FO_FUTSTK\n                            \n                        \n                        \n                            \n                                Value : NSE_FO_FUTSTK\n                            \n                        \n                        \n                            \n                                 NSE_FO_FUTIDX\n                            \n                        \n                        \n                            \n                                Value : NSE_FO_FUTIDX\n                            \n                        \n                        \n                            \n                                 NSE_FO_OPTIDX\n                            \n                        \n                        \n                            \n                                Value : NSE_FO_OPTIDX\n                            \n                        \n                        \n                            \n                                 NSE_FO_OPTSTK\n                            \n                        \n                        \n                            \n                                Value : NSE_FO_OPTSTK\n                            \n                        \n                        \n                            \n                                 NSE_CURR_FUTCUR\n                            \n                        \n                        \n                            \n                                Value : NSE_CURR_FUTCUR\n                            \n                        \n                        \n                            \n                                 NSE_CURR_OPTCUR\n                            \n                        \n                        \n                            \n                                Value : NSE_CURR_OPTCUR\n                            \n                        \n                        \n                            \n                                 MCX_COMM_OPTFUT\n                            \n                        \n                        \n                            \n                                Value : MCX_COMM_OPTFUT\n                            \n                        \n                        \n                            \n                                 MCX_COMM_FUTCOM\n                            \n                        \n                        \n                            \n                                Value : MCX_COMM_FUTCOM\n                            \n                        \n                        \n                            \n                                 NCDEX_COMM_OPTFUT\n                            \n                        \n                        \n                            \n                                Value : NCDEX_COMM_OPTFUT\n                            \n                        \n                        \n                            \n                                 NCDEX_COMM_FUTCOM\n                            \n                        \n                        \n                            \n                                Value : NCDEX_COMM_FUTCOM\n                            \n                        \n                        \n                            \n                                 NSE_CURR_UNDERLYING\n                            \n                        \n                        \n                            \n                                Value : NSE_CURR_UNDERLYING\n                            \n                        \n                        \n                            \n                                 MCX_COMM_UNDERLYING\n                            \n                        \n                        \n                            \n                                Value : MCX_COMM_UNDERLYING\n                            \n                        \n                        \n                            \n                                 NCDEX_COMM_UNDERLYING\n                            \n                        \n                        \n                            \n                                Value : NCDEX_COMM_UNDERLYING\n                            \n                        \n                        \n                            \n                                 NSE_EQ_UNDERLYING\n                            \n                        \n                        \n                            \n                                Value : NSE_EQ_UNDERLYING\n                            \n                        \n                        \n                            \n                                 BSE_EQ_UNDERLYING\n                            \n                        \n                        \n                            \n                                Value : BSE_EQ_UNDERLYING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addDerivativeIndexes   (src/.../index.ts)\n                        \n                        \n                            addIsinCodeIndexex   (src/.../index.ts)\n                        \n                        \n                            addMasterData   (src/.../index.ts)\n                        \n                        \n                            addScripIdIndexes   (src/.../index.ts)\n                        \n                        \n                            addSearchStringIndexes   (src/.../index.ts)\n                        \n                        \n                            addStore   (src/.../index.ts)\n                        \n                        \n                            checkIfContentHashIsSame   (src/.../UtilCache.ts)\n                        \n                        \n                            generateIndexesAndPostMessage   (src/.../DownloadWorker.ts)\n                        \n                        \n                            getCacheResponse   (src/.../UtilCache.ts)\n                        \n                        \n                            getContentHashFromHeaders   (src/.../UtilCache.ts)\n                        \n                        \n                            getDerivativeIndex   (src/.../index.ts)\n                        \n                        \n                            getIsinIndex   (src/.../index.ts)\n                        \n                        \n                            getLastCachedContentHash   (src/.../UtilCache.ts)\n                        \n                        \n                            getMasterData   (src/.../index.ts)\n                        \n                        \n                            getScripIndex   (src/.../index.ts)\n                        \n                        \n                            getSearchIndex   (src/.../index.ts)\n                        \n                        \n                            getSecurityMasterInitializationStatus   (src/.../index.ts)\n                        \n                        \n                            initialize   (src/.../index.ts)\n                        \n                        \n                            initializeDownload   (src/.../index.ts)\n                        \n                        \n                            isSecurityMasterLoaded   (src/.../index.ts)\n                        \n                        \n                            setCacheContentHash   (src/.../UtilCache.ts)\n                        \n                        \n                            setCacheResponse   (src/.../UtilCache.ts)\n                        \n                        \n                            setSecurityMasterInitializationStatus   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/store/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addDerivativeIndexes\n                        \n                    \n                \n            \n            \n                \naddDerivativeIndexes(data)\n                \n            \n\n\n\n\n            \n                \n                        Adds derivatives index data to the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The derivatives index data to be added to the store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addIsinCodeIndexex\n                        \n                    \n                \n            \n            \n                \naddIsinCodeIndexex(data)\n                \n            \n\n\n\n\n            \n                \n                        Adds ISIN code index data to the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ISIN code index data to be added to the store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addMasterData\n                        \n                    \n                \n            \n            \n                \naddMasterData(data)\n                \n            \n\n\n\n\n            \n                \n                        Adds master data to the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The master data to be added to the store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addScripIdIndexes\n                        \n                    \n                \n            \n            \n                \naddScripIdIndexes(data)\n                \n            \n\n\n\n\n            \n                \n                        Adds script ID index data to the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The script ID index data to be added to the store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSearchStringIndexes\n                        \n                    \n                \n            \n            \n                \naddSearchStringIndexes(data)\n                \n            \n\n\n\n\n            \n                \n                        Adds search string index data to the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The search string index data to be added to the store.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addStore\n                        \n                    \n                \n            \n            \n                \naddStore(inputStore: IStore)\n                \n            \n\n\n\n\n            \n                \n                        Adds data to the store. It iterates over the keys of the input store and updates the store accordingly.\nEach key corresponds to a specific type of data, and the function calls appropriate methods to update the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                inputStore\n                                            \n                                                            IStore\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The store object containing the data to be added.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDerivativeIndex\n                        \n                    \n                \n            \n            \n                \ngetDerivativeIndex()\n                \n            \n\n\n\n\n            \n                \n                        Retrieves the derivatives index data from the store.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsinIndex\n                        \n                    \n                \n            \n            \n                \ngetIsinIndex()\n                \n            \n\n\n\n\n            \n                \n                        Retrieves the ISIN code index data from the store.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMasterData\n                        \n                    \n                \n            \n            \n                \ngetMasterData()\n                \n            \n\n\n\n\n            \n                \n                        Retrieves the master data from the store.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScripIndex\n                        \n                    \n                \n            \n            \n                \ngetScripIndex()\n                \n            \n\n\n\n\n            \n                \n                        Retrieves the script ID index data from the store.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSearchIndex\n                        \n                    \n                \n            \n            \n                \ngetSearchIndex()\n                \n            \n\n\n\n\n            \n                \n                        Retrieves the search string index data from the store.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSecurityMasterInitializationStatus\n                        \n                    \n                \n            \n            \n                \ngetSecurityMasterInitializationStatus()\n                \n            \n\n\n\n\n            \n                \n                        Retrieves the security master initialization status from the store.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The security master initialization status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSecurityMasterInitializationStatus\n                        \n                    \n                \n            \n            \n                \nsetSecurityMasterInitializationStatus()\n                \n            \n\n\n\n\n            \n                \n                        Sets the security master initialization status in the store to true.\n\n\n                \n            \n        \n    \n    src/Utils/Cache/UtilCache.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkIfContentHashIsSame\n                        \n                    \n                \n            \n            \n                \ncheckIfContentHashIsSame(contentHash: string)\n                \n            \n\n\n\n\n            \n                \n                        Compares the provided content hash with the one stored in the cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contentHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content hash to compare.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheResponse\n                        \n                    \n                \n            \n            \n                \ngetCacheResponse(secMasterURL: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves the cached response for a given URL if it exists.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                secMasterURL\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL for which to fetch the cached response.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContentHashFromHeaders\n                        \n                    \n                \n            \n            \n                \ngetContentHashFromHeaders(headers: any)\n                \n            \n\n\n\n\n            \n                \n                        Extracts the content hash from the given headers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastCachedContentHash\n                        \n                    \n                \n            \n            \n                \ngetLastCachedContentHash()\n                \n            \n\n\n\n\n            \n                \n                        Retrieves the last cached content hash stored in the cache.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCacheContentHash\n                        \n                    \n                \n            \n            \n                \nsetCacheContentHash(value: string, cacheExpirationTime: number)\n                \n            \n\n\n\n\n            \n                \n                        Sets contenthash received from headers for sec master file in cache\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                cacheExpirationTime\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_CACHE_EXPIRATION_TIME\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCacheResponse\n                        \n                    \n                \n            \n            \n                \nsetCacheResponse(secMasterURL: string, SEC_MASTER_ARRAY: TMasterData)\n                \n            \n\n\n\n\n            \n                \n                        Stores the provided data in the cache for a given URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                secMasterURL\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL to associate with the cached data.\n\n\n                                            \n                                        \n                                        \n                                                SEC_MASTER_ARRAY\n                                            \n                                                            TMasterData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be stored in the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/Download/DownloadWorker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateIndexesAndPostMessage\n                        \n                    \n                \n            \n            \n                \ngenerateIndexesAndPostMessage(masterData: TMasterData, config?: IConfig)\n                \n            \n\n\n\n\n            \n                \n                        Generates indexes for the security master data and posts the data to the main thread.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                masterData\n                                            \n                                                            TMasterData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The security master data to index.\n\n                                            \n                                        \n                                        \n                                                config\n                                            \n                                                            IConfig\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Configuration options for indexing.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(secMasterURL: string, config: IConfig)\n                \n            \n\n\n\n\n            \n                \n                        Initializes the system by setting up the security master download and preparing the required modules.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                secMasterURL\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe URL for the security master, used for downloading data and setting up indexes.\n\n\n                                            \n                                        \n                                        \n                                                config\n                                            \n                                                            IConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_VALUES\n                                            \n\n                                            \n                                                    \nConfiguration object to customize the initialization behavior.\nrequireSearchModule {boolean} - Specifies whether the search module is required (default: false).\nrequireSocketModule {boolean} - Specifies whether the socket module is required (default: false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSecurityMasterLoaded\n                        \n                    \n                \n            \n            \n                \nisSecurityMasterLoaded()\n                \n            \n\n\n\n\n            \n                \n                        Checks if the security master has been successfully loaded and initialized.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \ntrue if the security master is initialized, otherwise false.\n\n\n                            \n                \n            \n        \n    \n    src/Download/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeDownload\n                        \n                    \n                \n            \n            \n                \ninitializeDownload(secMasterURL: string, config: IConfig)\n                \n            \n\n\n\n\n            \n                \n                        Initializes the download process by creating an instance of DownloadManager.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                secMasterURL\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe URL of the sec master file to be downloaded.\n\n\n                                            \n                                        \n                                        \n                                                config\n                                            \n                                                            IConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_VALUES\n                                            \n\n                                            \n                                                    \nOptional configuration for the download manager.\nDefaults to { requireSearchModule: false } if not provided.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@am92/securities-utility\n \n \n \n \n\n\n\n\nTable of Content\n\nInstallation\nContributors\nResources\nLicense\n\n\n\nInstallation\nExample :$ npm install --save @am92/securities-utility\n\nInitialization\nThe initialization step downloads the security master (sec master) from the specified URL and applies optimizations to enhance the performance of subsequent functionalities. This step runs on the main thread, and the package internally manages the worker for parallel execution. You only need to include a dedicated TypeScript/JavaScript file in your index.html\n\n\nInstructions\n\nCreate a New File: \nCreate a new TypeScript/JavaScript file (e.g., initializeSecMaster.ts) containing the initialization code.\n\ninitializeSecMaster.ts\nExample :import { initialize } from '@am92/securities-utility'\n\nconst SEC_MASTER_URL = process.env.SEC_MASTER_URL // URL for downloading the sec master (can be environment-specific)\n\n// Initialize the sec master\ntry {\n  initialize(SEC_MASTER_URL)\n  console.log('Sec master initialization successful.')\n} catch (error) {\n  console.error('Sec master initialization failed:', error)\n}\nInclude the File in index.html\nAdd the following script tag to your index.html to include the file:\n\nExample :\n\n\nInitialized Security Master With Search Module\ninitializeSecMaster.ts\n\nPass { requireSearchModule: true } to enable the fuzzy search module during Security Master initialization.\n\n\nExample :import { initialize } from '@am92/securities-utility'\n\nconst SEC_MASTER_URL = process.env.SEC_MASTER_URL // URL for downloading the sec master (can be environment-specific)\n\n// Initialize the sec master\ntry {\n  initialize(SEC_MASTER_URL, {\n    requireSearchModule: true\n  })\n  console.log('Sec master initialization successful.')\n} catch (error) {\n  console.error('Sec master initialization failed:', error)\n}\n\nUsing Search Function When Required\nExample :import { searchManager } from '@am92/securities-utility'\n\nconst handleSearch = async (searchString: string) => {\n  const searchResult = await searchManager.search(searchString)\n  console.log(searchResult) // Array of matched security objects\n}\n\nNotes:\n\nThe package automatically handles the use of a web worker for parallel execution, ensuring the main thread remains unblocked.\nEnsure the SEC_MASTER_URL environment variable is correctly configured for your deployment environment.\n\nThis streamlined approach keeps your application setup simple while leveraging the package's internal optimizations.\n\n\nContributors\n\n  \n    \n      \n        \n          \n          \n          Ankit Gandhi\n        \n      \n      \n        \n          \n          \n          Mehul Agarwal\n        \n      \n      \n        \n          \n          \n          Suyash Jadhav\n        \n      \n    \n  \n\n\n\n\nResources\n\n\nLicense\n\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Ankit Mehul Team Account\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : A utility package for securities applications\n        \n            Keywords : securities, Sec Master\n        \n            Homepage : https://heliumtank92.github.io/securities-utility\n        \n            License : MIT\n        \n            Repository : git@github.com:heliumtank92/am92-securities-utility.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyFunction   (src/.../memoized.ts)\n                        \n                        \n                            TDerivativesIndex   (src/.../Store.ts)\n                        \n                        \n                            TExchange   (src/.../Script.ts)\n                        \n                        \n                            TIndexHandler   (src/.../IndexHandler.ts)\n                        \n                        \n                            TIndexHandlers   (src/.../IndexHandler.ts)\n                        \n                        \n                            TInstrumentType   (src/.../Script.ts)\n                        \n                        \n                            TIsinCode   (src/.../Store.ts)\n                        \n                        \n                            TIsinCodeIndex   (src/.../Store.ts)\n                        \n                        \n                            TMasterData   (src/.../Store.ts)\n                        \n                        \n                            TMasterDataDerivatives   (src/.../Store.ts)\n                        \n                        \n                            TMasterDataDerivativesScript   (src/.../Store.ts)\n                        \n                        \n                            TMasterDataEquity   (src/.../Store.ts)\n                        \n                        \n                            TMasterDataSegmentKeys   (src/.../Store.ts)\n                        \n                        \n                            TMasterDataUnderlying   (src/.../Store.ts)\n                        \n                        \n                            TMessageEvent   (src/.../DownloadManager.ts)\n                        \n                        \n                            TScriptId   (src/.../Store.ts)\n                        \n                        \n                            TScriptIdIndex   (src/.../Store.ts)\n                        \n                        \n                            TScriptIdIndexValue   (src/.../Store.ts)\n                        \n                        \n                            TScriptPopulate   (src/.../Script.ts)\n                        \n                        \n                            TSearchChunkId   (src/.../Store.ts)\n                        \n                        \n                            TSearchStringIndex   (src/.../Store.ts)\n                        \n                        \n                            TSecSegmentStructureType   (src/.../SecurityMaster.ts)\n                        \n                        \n                            TSecSegmentTypes   (src/.../SecurityMaster.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/Utils/memoized.ts\n    \n    \n        \n            \n                \n                    \n                    AnyFunction\n                \n            \n            \n                \n                    Represents any function with any number of arguments and return type.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/TYPES/Store.ts\n    \n    \n        \n            \n                \n                    \n                    TDerivativesIndex\n                \n            \n            \n                \n                    Type representing an index for derivatives, including both futures and options.\nIt organizes derivative script IDs by type (FUTURES and OPTIONS).\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TIsinCode\n                \n            \n            \n                \n                    Type representing the ISIN code for a security.\nThis is used for indexing securities by their ISIN code.\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TIsinCodeIndex\n                \n            \n            \n                \n                    Type representing an index of ISIN codes.\nMaps each ISIN code to a list of script IDs associated with it.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TMasterData\n                \n            \n            \n                \n                    Type representing master data for derivative instruments, including a list of derivative scripts.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TMasterDataDerivatives\n                \n            \n            \n                \n                    Represents the data structure for derivatives in the system.\nThis type includes information about the exchange symbol, underlying asset,\nasset class, and an array of derivative scripts associated with the derivative.\n\n                \n            \n            \n                \n                        [, , , TMasterDataDerivativesScript[]]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TMasterDataDerivativesScript\n                \n            \n            \n                \n                    Type representing the structure of master data for derivatives scripts.\nIncludes specific properties like expiryDate, strikePrice, and optionType for derivative instruments.\n\n                \n            \n            \n                \n                            [TScriptId, , , , , , , , , , , , , , , , , , , , , , , ]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TMasterDataEquity\n                \n            \n            \n                \n                    Type representing the structure of master data for equity securities.\nIt contains various properties related to equity scripts such as scriptId, coName, lotSize, and more.\n\n                \n            \n            \n                \n                            [TScriptId, , , , , , , , , , , , , , , , , , , , , , , , ]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TMasterDataSegmentKeys\n                \n            \n            \n                \n                    Type for the keys of the MASTER_DATA_SEGMENTS enum.\nRepresents the valid segment keys in the master data.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TMasterDataUnderlying\n                \n            \n            \n                \n                    Type representing the structure of master data for underlying securities.\nIt contains similar properties as equity but tailored for underlying securities.\n\n                \n            \n            \n                \n                            [TScriptId, , , , , , , , , , , , , , , , , , , , , ]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TScriptId\n                \n            \n            \n                \n                    Type representing the script ID from the IScript interface.\n\n                \n            \n            \n                \n                            IScript\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TScriptIdIndex\n                \n            \n            \n                \n                    Type representing an index of script IDs.\nMaps each script ID to its corresponding index value.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TScriptIdIndexValue\n                \n            \n            \n                \n                    Type representing the index for script IDs. This is used to store a reference to the master data segment\nand the index value (could be a single or multi-level index).\n\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TSearchChunkId\n                \n            \n            \n                \n                    Type representing a search chunk identifier.\nThis is used for efficient indexing and retrieval of search results.\n\n                \n            \n            \n                \n                            number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TSearchStringIndex\n                \n            \n            \n                \n                    Type representing a searchable index for chunked data.\nIt maps each search chunk to its relevant search string, data, search priority, and exchange symbol.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/TYPES/Script.ts\n    \n    \n        \n            \n                \n                    \n                    TExchange\n                \n            \n            \n                \n                    Represents the possible exchanges where financial instruments can be traded.\n\n                \n            \n            \n                \n                        \"NSE\" | \"BSE\" | \"MCX\" | \"NCDEX\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TInstrumentType\n                \n            \n            \n                \n                    Represents the possible instrument types for financial assets.\n\n                \n            \n            \n                \n                        \"EQUITY\" | \"FUTSTK\" | \"FUTIDX\" | \"OPTIDX\" | \"OPTSTK\" | \"FUTCUR\" | \"OPTCUR\" | \"OPTFUT\" | \"FUTCOM\" | \"UNDERLYING\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TScriptPopulate\n                \n            \n            \n                \n                    A type representing the keys of the IScript interface that are used to populate or extract specific fields of a script.\n\n                \n            \n            \n                \n                        ()[]\n\n                \n            \n        \n    \n    src/TYPES/IndexHandler.ts\n    \n    \n        \n            \n                \n                    \n                    TIndexHandler\n                \n            \n            \n                \n                    A generic type for handling index operations. This type defines methods\nfor adding rows of data to the index and retrieving the current index state.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TIndexHandlers\n                \n            \n            \n                \n                    A collection of index handlers, where each handler corresponds to a different index type.\nThe handlers manage operations for script IDs, ISIN codes, derivatives, and search strings.\nThe fourth handler for TSearchStringIndex is optional.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/Download/DownloadManager.ts\n    \n    \n        \n            \n                \n                    \n                    TMessageEvent\n                \n            \n            \n                \n                    Type representing the structure of messages received from the worker.\nThis type defines the structure of the messages that the main thread receives from the web worker.\nIt includes an action string that identifies the type of message, and an optional data field\nwhich contains additional information related to the action. The shape of data depends on the specific action.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/TYPES/SecurityMaster.ts\n    \n    \n        \n            \n                \n                    \n                    TSecSegmentStructureType\n                \n            \n            \n                \n                    Represents the possible structure types of security segments, defining how the data is organized.\nThe structure type determines how the information for a specific security segment is represented.\n\n                \n            \n            \n                \n                        \"FLAT_EQUITY\" | \"FLAT_UNDERLYING\" | \"NESTED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TSecSegmentTypes\n                \n            \n            \n                \n                    Represents the possible segment types for different securities traded in various exchanges.\nThis type helps categorize securities based on their exchange, instrument type, and other related factors.\n\n                \n            \n            \n                \n                        \"NSE_EQ_EQUITY\" | \"BSE_EQ_EQUITY\" | \"NSE_FO_FUTSTK\" | \"NSE_FO_FUTIDX\" | \"NSE_FO_OPTIDX\" | \"NSE_FO_OPTSTK\" | \"NSE_CURR_FUTCUR\" | \"NSE_CURR_OPTCUR\" | \"MCX_COMM_OPTFUT\" | \"MCX_COMM_FUTCOM\" | \"NCDEX_COMM_OPTFUT\" | \"NCDEX_COMM_FUTCOM\" | \"NSE_CURR_UNDERLYING\" | \"MCX_COMM_UNDERLYING\" | \"NCDEX_COMM_UNDERLYING\" | \"NSE_EQ_UNDERLYING\" | \"BSE_EQ_UNDERLYING\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _getScripByScripId   (src/.../secMaster.ts)\n                        \n                        \n                            _getSegmentDetails   (src/.../secMaster.ts)\n                        \n                        \n                            _mapFlattenDerivativeScriptToScript   (src/.../secMaster.ts)\n                        \n                        \n                            _mapFlattenEquityScriptToScript   (src/.../secMaster.ts)\n                        \n                        \n                            _mapFlattenUnderlingScriptToScript   (src/.../secMaster.ts)\n                        \n                        \n                            createIndexes   (src/.../DownloadWorker.ts)\n                        \n                        \n                            DEFAULT_VALUES   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_VALUES   (src/.../index.ts)\n                        \n                        \n                            derivativesIndexHandler   (src/.../derivativesIndex.ts)\n                        \n                        \n                            fetchOnlyHeaders   (src/.../DownloadWorker.ts)\n                        \n                        \n                            fetchSecurityMaster   (src/.../DownloadWorker.ts)\n                        \n                        \n                            getDerivativeScripsByScripId   (src/.../secMaster.ts)\n                        \n                        \n                            getScripByScripId   (src/.../secMaster.ts)\n                        \n                        \n                            getScripsByIsinCode   (src/.../secMaster.ts)\n                        \n                        \n                            getScripsByScripIds   (src/.../secMaster.ts)\n                        \n                        \n                            getScriptByScriptIdIndexValue   (src/.../secMaster.ts)\n                        \n                        \n                            isinCodeIndexHandler   (src/.../isinCodeIndex.ts)\n                        \n                        \n                            scriptIdIndexHandler   (src/.../scriptIdIndex.ts)\n                        \n                        \n                            searchManager   (src/.../SearchManager.ts)\n                        \n                        \n                            searchStringIndexHandler   (src/.../searchStringIndex.ts)\n                        \n                        \n                            searchWorker   (src/.../SearchWorker.ts)\n                        \n                        \n                            SECURITY_MASTER_NOT_INITIALIZED   (src/.../ERROR_MESSAGE.ts)\n                        \n                        \n                            store   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/secMaster.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _getScripByScripId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  scriptId: IScript['scriptId'],\n  populate?: TScriptPopulate\n) => {\n  const scriptIdIndex = getScripIndex()\n\n  if (!scriptIdIndex) {\n    // TODO: Beautify\n    console.warn('ScriptIdIndex not found in store')\n    return\n  }\n\n  const locations = scriptIdIndex[scriptId]\n\n  if (!locations) {\n    return\n  }\n\n  return getScriptByScriptIdIndexValue(locations, populate)\n}\n                    \n                \n\n            \n                \n                    Retrieves a script object by its scriptId, optionally populating additional properties.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _getSegmentDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (masterDataSegment: MASTER_DATA_SEGMENTS) => {\n  const [exchange, segment, instrumentType] = masterDataSegment.split('_') as [\n    IScript['exchange'],\n    IScript['segment'],\n    IScript['instrumentType']\n  ]\n  const scriptObj: Pick = {\n    segment,\n    exchange,\n    instrumentType\n  }\n  return scriptObj\n}\n                    \n                \n\n            \n                \n                    Parses and retrieves the segment details from a master data segment identifier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _mapFlattenDerivativeScriptToScript\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  locations: TScriptIdIndexValue\n) => {\n  const masterData = getMasterData()\n\n  if (!masterData) {\n    // TODO: Beautify\n    console.warn('masterData not found in store')\n    return\n  }\n\n  const [\n    masterDataSegment,\n    scriptIndex,\n    derivativesIndex,\n    derivativesScriptIndex\n  ] = locations\n\n  const { segment, exchange, instrumentType } =\n    _getSegmentDetails(masterDataSegment)\n\n  const segmentData = masterData[masterDataSegment] as TMasterDataDerivatives[]\n  const flattenDerivative = segmentData[scriptIndex]\n  const [exchangeSymbol, _, assetClass, flattenDerivativeScripts] =\n    flattenDerivative\n  const flattenDerivativeScript =\n    flattenDerivativeScripts[derivativesScriptIndex!]\n\n  if (flattenDerivativeScript) {\n    const [\n      scriptId,\n      odinTokenId,\n      exchangeSecurityId,\n      aslAllowed,\n      coName,\n      expiryDate,\n      strikePrice,\n      optionType,\n      lotSize,\n      tickSize,\n      nriAllowed,\n      closePrice,\n      searchable,\n      searchPriority,\n      yesterdayOpenInt,\n      maxSingleOrderQty,\n      underlying,\n      asmFlag,\n      odinLlfcSegmentId,\n      cmotsCoCode,\n      dprLow,\n      dprHigh,\n      fiftyTwoWeekLow,\n      fiftyTwoWeekHigh\n    ] = flattenDerivativeScript\n\n    const scriptObj: IScript = {\n      segment,\n      exchange,\n      instrumentType,\n      exchangeSymbol,\n      assetClass,\n      scriptId,\n      odinTokenId,\n      exchangeSecurityId,\n      aslAllowed,\n      coName,\n      expiryDate,\n      strikePrice,\n      optionType,\n      lotSize,\n      tickSize,\n      nriAllowed,\n      closePrice,\n      searchable,\n      searchPriority,\n      yesterdayOpenInt,\n      maxSingleOrderQty,\n      underlying,\n      asmFlag,\n      odinLlfcSegmentId,\n      cmotsCoCode,\n      dprLow,\n      dprHigh,\n      fiftyTwoWeekLow,\n      fiftyTwoWeekHigh\n    }\n\n    return scriptObj\n  }\n}\n                    \n                \n\n            \n                \n                    Maps and flattens derivative script data to a script object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _mapFlattenEquityScriptToScript\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (locations: TScriptIdIndexValue) => {\n  const masterData = getMasterData()\n\n  if (!masterData) {\n    // TODO: Beautify\n    console.warn('masterData not found in store')\n    return\n  }\n\n  const [masterDataSegment, scriptIndex] = locations\n\n  const { segment, exchange, instrumentType } =\n    _getSegmentDetails(masterDataSegment)\n\n  const segmentData = masterData[masterDataSegment] as TMasterDataEquity[]\n  const flattenEquityScript = segmentData[scriptIndex]\n\n  const [\n    scriptId,\n    odinTokenId,\n    exchangeSecurityId,\n    aslAllowed,\n    exchangeSymbol,\n    exchangeSeries,\n    isinCode,\n    coName,\n    lotSize,\n    tickSize,\n    nriAllowed,\n    closePrice,\n    assetClass,\n    searchable,\n    searchPriority,\n    yesterdayOpenInt,\n    maxSingleOrderQty,\n    underlying,\n    asmFlag,\n    odinLlfcSegmentId,\n    cmotsCoCode,\n    dprLow,\n    dprHigh,\n    fiftyTwoWeekLow,\n    fiftyTwoWeekHigh\n  ] = flattenEquityScript\n\n  const scriptObj: IScript = {\n    segment,\n    exchange,\n    instrumentType,\n    scriptId,\n    odinTokenId,\n    exchangeSecurityId,\n    aslAllowed,\n    exchangeSymbol,\n    exchangeSeries,\n    isinCode,\n    coName,\n    lotSize,\n    tickSize,\n    nriAllowed,\n    closePrice,\n    assetClass,\n    searchable,\n    searchPriority,\n    yesterdayOpenInt,\n    maxSingleOrderQty,\n    underlying,\n    asmFlag,\n    odinLlfcSegmentId,\n    cmotsCoCode,\n    dprLow,\n    dprHigh,\n    fiftyTwoWeekLow,\n    fiftyTwoWeekHigh\n  }\n\n  return scriptObj\n}\n                    \n                \n\n            \n                \n                    Maps and flattens equity script data to a script object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _mapFlattenUnderlingScriptToScript\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (locations: TScriptIdIndexValue) => {\n  const masterData = getMasterData()\n\n  if (!masterData) {\n    // TODO: Beautify\n    console.warn('masterData not found in store')\n    return\n  }\n\n  const [masterDataSegment, scriptIndex] = locations\n\n  const { segment, exchange, instrumentType } =\n    _getSegmentDetails(masterDataSegment)\n\n  const segmentData = masterData[masterDataSegment] as TMasterDataUnderlying[]\n  const flattenEquityScript = segmentData[scriptIndex]\n\n  const [\n    scriptId,\n    odinTokenId,\n    exchangeSecurityId,\n    aslAllowed,\n    exchangeSymbol,\n    coName,\n    lotSize,\n    tickSize,\n    nriAllowed,\n    closePrice,\n    assetClass,\n    searchable,\n    searchPriority,\n    yesterdayOpenInt,\n    underlying,\n    asmFlag,\n    odinLlfcSegmentId,\n    cmotsCoCode,\n    dprLow,\n    dprHigh,\n    fiftyTwoWeekLow,\n    fiftyTwoWeekHigh\n  ] = flattenEquityScript\n\n  const scriptObj: IScript = {\n    segment,\n    exchange,\n    instrumentType,\n    scriptId,\n    odinTokenId,\n    exchangeSecurityId,\n    aslAllowed,\n    exchangeSymbol,\n    coName,\n    lotSize,\n    tickSize,\n    nriAllowed,\n    closePrice,\n    assetClass,\n    searchable,\n    searchPriority,\n    yesterdayOpenInt,\n    underlying,\n    asmFlag,\n    odinLlfcSegmentId,\n    cmotsCoCode,\n    dprLow,\n    dprHigh,\n    fiftyTwoWeekLow,\n    fiftyTwoWeekHigh\n  }\n\n  return scriptObj\n}\n                    \n                \n\n            \n                \n                    Maps and flattens underlying script data to a script object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDerivativeScripsByScripId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  scriptId: IScript['scriptId'],\n  derivativeType: 'FUTURES' | 'OPTIONS' | 'BOTH' = 'BOTH',\n  populate?: TScriptPopulate\n) => {\n  const script = getScripByScripId(scriptId, populate)\n\n  if (!script) {\n    return {}\n  }\n\n  const { underlying, isinCode, exchange, instrumentType } = script\n\n  let underlyingId: IScript['underlying'] = underlying\n  if (!underlyingId) {\n    if (exchange === 'NSE' && instrumentType === 'EQUITY') {\n      underlyingId = scriptId\n    }\n\n    if (!isinCode) {\n      return {}\n    }\n\n    const isinCodeIndex = getIsinIndex()\n    if (!isinCodeIndex) {\n      // TODO: Beautify\n      console.warn('isinCodeIndex not found in store')\n      return {}\n    }\n\n    if (exchange === 'BSE') {\n      const scriptIds = isinCodeIndex && isinCodeIndex[isinCode]\n      const nseScriptId = scriptIds.filter(\n        scriptIdentifier => scriptIdentifier !== scriptId\n      )[0]\n      underlyingId = nseScriptId\n    }\n  }\n\n  const derivativesIndex = getDerivativeIndex()\n  if (!derivativesIndex) {\n    // TODO: Beautify\n    console.warn('derivativesIndex not found in store')\n    return {}\n  }\n\n  const derivativesScriptIdsObj =\n    (underlyingId && derivativesIndex[underlyingId]) || null\n\n  if (derivativesScriptIdsObj) {\n    if (derivativeType === 'BOTH') {\n      return {\n        FUTURES: getScripsByScripIds(derivativesScriptIdsObj.FUTURES, populate),\n        OPTIONS: getScripsByScripIds(derivativesScriptIdsObj.OPTIONS, populate)\n      }\n    } else if (derivativeType === 'FUTURES') {\n      return {\n        FUTURES: getScripsByScripIds(derivativesScriptIdsObj.FUTURES, populate)\n      }\n    } else {\n      return {\n        OPTIONS: getScripsByScripIds(derivativesScriptIdsObj.OPTIONS, populate)\n      }\n    }\n  }\n}\n                    \n                \n\n            \n                \n                    Retrieves derivative scripts associated with a specific scriptId, filtered by derivative type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScripByScripId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : memoize(_getScripByScripId, 100)\n                    \n                \n\n            \n                \n                    Memoized version of _getScripByScripId for optimized retrieval.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScripsByIsinCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  isinCode: IScript['isinCode'],\n  populate?: TScriptPopulate\n) => {\n  const isinCodeIndex = getIsinIndex()\n\n  if (!isinCode) {\n    return []\n  }\n\n  if (!isinCodeIndex) {\n    // TODO: Beautify\n    console.warn('isinCodeIndex not found in store')\n    return\n  }\n\n  const scriptIds = isinCodeIndex[isinCode]\n  return getScripsByScripIds(scriptIds, populate)\n}\n                    \n                \n\n            \n                \n                    Retrieves scripts by their ISIN code, optionally populating additional properties.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScripsByScripIds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  scriptIds: IScript['scriptId'][],\n  populate?: TScriptPopulate\n) => {\n  if (!scriptIds) {\n    return []\n  }\n\n  const scripts = scriptIds\n    .map(scriptId => getScripByScripId(scriptId, populate))\n    .filter(script => script !== undefined)\n  return scripts\n}\n                    \n                \n\n            \n                \n                    Retrieves multiple scripts by their scriptIds, optionally populating additional properties.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScriptByScriptIdIndexValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  scriptIdIndexValue: TScriptIdIndexValue,\n  populate: TScriptPopulate = []\n): IScript | undefined | Pick => {\n  const { instrumentType } = _getSegmentDetails(scriptIdIndexValue[0])\n\n  let script: IScript | undefined\n  if (instrumentType === 'EQUITY') {\n    script = _mapFlattenEquityScriptToScript(scriptIdIndexValue)\n  } else if (instrumentType === 'UNDERLYING') {\n    script = _mapFlattenUnderlingScriptToScript(scriptIdIndexValue)\n  } else {\n    script = _mapFlattenDerivativeScriptToScript(scriptIdIndexValue)\n  }\n\n  if (populate.length && script) {\n    const scriptObj = Object.fromEntries(\n      populate.filter(key => key in script).map(key => [key, script[key]])\n    ) as Pick\n    return scriptObj\n  }\n\n  return script\n}\n                    \n                \n\n            \n                \n                    Retrieves a script object by its index value, optionally populating additional properties.\n\n                \n            \n\n        \n    \n\n    src/Download/DownloadWorker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createIndexes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  masterData: TMasterData,\n  options?: IConfig\n): {\n  scriptIdIndex: TScriptIdIndex\n  isinCodeIndex: TIsinCodeIndex\n  derivativesIndex: TDerivativesIndex\n  searchStringIndex?: TSearchStringIndex\n} => {\n  let indexHandlers: TIndexHandlers = [\n    scriptIdIndexHandler(),\n    isinCodeIndexHandler(),\n    derivativesIndexHandler()\n  ]\n\n  if (options && options.requireSearchModule) {\n    indexHandlers.push(\n      searchStringIndexHandler() as TIndexHandler\n    )\n  }\n\n  for (const SEC_SEGMENT of SEC_SEGMENTS) {\n    const secMasterSegmentKey = SEC_SEGMENT.name as MASTER_DATA_SEGMENTS\n    const segmentData = masterData[secMasterSegmentKey]\n\n    if (!segmentData) continue\n\n    if (\n      SEC_SEGMENT.type === 'FLAT_EQUITY' ||\n      SEC_SEGMENT.type === 'FLAT_UNDERLYING'\n    ) {\n      const totalData = segmentData.length\n      for (let itemIndex = 0; itemIndex \n          indexHandler?.addRow(secMasterSegmentKey, itemIndex, itemData)\n        )\n      }\n    } else {\n      const totalData = segmentData.length\n      for (let itemIndex = 0; itemIndex \n            indexHandler?.addRow(\n              secMasterSegmentKey,\n              itemIndex,\n              itemData,\n              derivativeItemIndex,\n              derivativeItem\n            )\n          )\n        }\n      }\n    }\n  }\n\n  const indexesArray = indexHandlers.map(indexHandler =>\n    indexHandler?.getIndex()\n  )\n  const scriptIdIndex = indexesArray[0] as TScriptIdIndex\n  const isinCodeIndex = indexesArray[1] as TIsinCodeIndex\n  const derivativesIndex = indexesArray[2] as TDerivativesIndex\n  const searchStringIndex = indexesArray[3] as TSearchStringIndex | undefined\n\n  const indexes = {\n    scriptIdIndex,\n    isinCodeIndex,\n    derivativesIndex,\n    searchStringIndex\n  }\n\n  return indexes\n}\n                    \n                \n\n            \n                \n                    Creates indexes for different segments of the security master data based on configuration options.\nThis function creates various indexes like scriptIdIndex, isinCodeIndex, derivativesIndex,\nand optionally searchStringIndex, depending on the requireSearchModule flag in the configuration.\nIt loops through the segments of the security master data, processes each item, and adds it to the corresponding index.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchOnlyHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (secMasterURL: string) => {\n  try {\n    const response = await fetch(secMasterURL, {\n      method: 'HEAD',\n      mode: 'no-cors',\n      headers: {\n        'Cache-Control': 'no-cache',\n        Pragma: 'no-cache',\n        Expires: '0'\n      }\n    })\n\n    if (response) {\n      return response?.headers\n    }\n  } catch (err) {\n    console.log(err, 'header errors')\n  }\n  return null\n}\n                    \n                \n\n            \n                \n                    Fetches the headers from the provided security master URL without retrieving the entire file.\nThis function uses a 'HEAD' request to fetch only the headers of the file. It helps in\nchecking if the file has been modified or not by comparing the content hash from the headers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchSecurityMaster\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  secMasterURL: string,\n  config: IConfig\n) => {\n  const headers = await fetchOnlyHeaders(secMasterURL)\n  const contentHash = getContentHashFromHeaders(headers)\n\n  // NOTE: variable to check if the file content is updated or same\n  const isContentHashSame = await checkIfContentHashIsSame(contentHash)\n\n  // check if response is cached\n  const cacheResponse = await getCacheResponse(secMasterURL)\n\n  if (isContentHashSame && cacheResponse) {\n    generateIndexesAndPostMessage(cacheResponse, config)\n    return\n  }\n\n  const response = await fetch(secMasterURL, {\n    method: 'GET'\n  })\n\n  const { headers: currentHeaders = {} } = response\n  const currentContentHash = getContentHashFromHeaders(currentHeaders)\n\n  const SEC_MASTER_ARRAY: TMasterData = await response.json()\n  setCacheResponse(secMasterURL, SEC_MASTER_ARRAY)\n  setCacheContentHash(currentContentHash)\n\n  generateIndexesAndPostMessage(SEC_MASTER_ARRAY, config)\n}\n                    \n                \n\n            \n                \n                    Fetches the security master data from the provided URL, checks the file's content hash,\nand updates the cache if the file content has changed.\nIf the content hash is the same and the response is already cached, it returns the cached response.\nOtherwise, it fetches the new data, updates the cache, creates indexes, and sends the data back to the main thread.\n\n                \n            \n\n        \n    \n\n    src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  requireSearchModule: false,\n  requireSocketModule: false\n}\n                    \n                \n\n            \n                \n                    Configuration object defining the default values for system modules.\n\nrequireSearchModule: Specifies whether the search module is required (default: false).\nrequireSocketModule: Specifies whether the socket module is required (default: false).\n\n\n                \n            \n\n        \n    \n\n    src/Download/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { requireSearchModule: false }\n                    \n                \n\n            \n                \n                    Default configuration values for the module\n\n                \n            \n\n        \n    \n\n    src/Download/indexes/derivativesIndex.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        derivativesIndexHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): TIndexHandler => {\n  const index: TDerivativesIndex = {}\n\n  const addRow = (\n    segmentKey: MASTER_DATA_SEGMENTS,\n    itemIndex: number,\n    itemData:\n      | TMasterDataEquity\n      | TMasterDataDerivatives\n      | TMasterDataUnderlying,\n    derivativeItemIndex?: number,\n    derivativeItem?: TMasterDataDerivativesScript\n  ) => {\n    // if not Derivative return\n    if (!derivativeItem) {\n      return\n    }\n\n    let item: TMasterDataDerivatives = itemData as TMasterDataDerivatives\n\n    const underlying = item[1]\n    const scriptId = derivativeItem![0]\n    const isAslAllowed = derivativeItem![3]\n\n    // if script is not allowed don't add to any index\n    if (isAslAllowed === 'N' || !underlying) {\n      return\n    }\n\n    if (!index[underlying]) {\n      index[underlying] = {\n        FUTURES: [],\n        OPTIONS: []\n      }\n    }\n\n    const [_exchange, _segment, instrumentType] = segmentKey.split('_')\n    const key: 'FUTURES' | 'OPTIONS' | undefined =\n      (FUTURES.includes(instrumentType) && 'FUTURES') ||\n      (OPTIONS.includes(instrumentType) && 'OPTIONS') ||\n      undefined\n\n    if (key) {\n      index[underlying][key].push(scriptId)\n    }\n  }\n\n  const getIndex = () => index\n\n  return {\n    addRow,\n    getIndex\n  }\n}\n                    \n                \n\n            \n                \n                    Handles indexing of derivatives data by organizing futures and options\nbased on their underlying assets. This is useful for quick lookups and\ncategorization of derivative scripts.\n\n                \n            \n\n        \n    \n\n    src/Download/indexes/isinCodeIndex.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isinCodeIndexHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): TIndexHandler => {\n  const index: TIsinCodeIndex = {}\n\n  const addRow = (\n    segmentKey: MASTER_DATA_SEGMENTS,\n    itemIndex: number,\n    itemData:\n      | TMasterDataEquity\n      | TMasterDataDerivatives\n      | TMasterDataUnderlying,\n    derivativeItemIndex?: number,\n    derivativeItem?: TMasterDataDerivativesScript\n  ) => {\n    // Derivative & Unerlying does not have isincode\n    if (derivativeItem || segmentKey.includes('UNDERLYING')) {\n      return\n    }\n\n    let item: TMasterDataEquity = itemData as TMasterDataEquity\n\n    const scriptId = item[0]\n    const isAslAllowed = item[3]\n    const isinCode = item[6]\n    const isValidIsincode = isinCode && isinCode !== '0'\n\n    // if script is not allowed don't add to any index\n    if (isAslAllowed === 'N' || !isValidIsincode) {\n      return\n    }\n\n    if (!index[isinCode]) {\n      index[isinCode] = []\n    }\n\n    index[isinCode].push(scriptId)\n  }\n\n  const getIndex = () => index\n\n  return {\n    addRow,\n    getIndex\n  }\n}\n                    \n                \n\n            \n                \n                    Handles indexing of ISIN codes by associating them with their corresponding\nscript IDs. This index is specifically designed for equity data and excludes\nderivatives and underlying segments.\n\n                \n            \n\n        \n    \n\n    src/Download/indexes/scriptIdIndex.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scriptIdIndexHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): TIndexHandler => {\n  const index: TScriptIdIndex = {}\n\n  const addRow = (\n    segmentKey: MASTER_DATA_SEGMENTS,\n    itemIndex: number,\n    itemData:\n      | TMasterDataEquity\n      | TMasterDataDerivatives\n      | TMasterDataUnderlying,\n    derivativeItemIndex?: number,\n    derivativeItem?: TMasterDataDerivativesScript\n  ) => {\n    let item:\n      | TMasterDataEquity\n      | TMasterDataUnderlying\n      | TMasterDataDerivativesScript =\n      (derivativeItem && derivativeItem) ||\n      (itemData as TMasterDataEquity | TMasterDataUnderlying)\n\n    const scriptId = item[0]\n\n    const map: TScriptIdIndexValue = [segmentKey, itemIndex]\n\n    if (derivativeItemIndex) {\n      map.push(3, derivativeItemIndex)\n    }\n\n    index[scriptId] = map\n  }\n\n  const getIndex = () => index\n\n  return {\n    addRow,\n    getIndex\n  }\n}\n                    \n                \n\n            \n                \n                    Handles indexing of script IDs by associating them with metadata such as segment keys,\nitem indices, and derivative item indices (if applicable). This allows quick lookup\nof script metadata based on their IDs.\n\n                \n            \n\n        \n    \n\n    src/Search/SearchManager.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        searchManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SearchManager()\n                    \n                \n\n            \n                \n                    Singleton instance of SearchManager exported for use across app.\n\n                \n            \n\n        \n    \n\n    src/Download/indexes/searchStringIndex.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        searchStringIndexHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): TIndexHandler => {\n    const index: TSearchStringIndex = {}\n\n    const addRow = (\n      segmentKey: MASTER_DATA_SEGMENTS,\n      itemIndex: number,\n      itemData:\n        | TMasterDataEquity\n        | TMasterDataDerivatives\n        | TMasterDataUnderlying,\n      derivativeItemIndex?: number,\n      derivativeItem?: TMasterDataDerivativesScript\n    ) => {\n      let exchangeSymbol: IScript['exchangeSymbol']\n      let searchString: IScript['searchable']\n      let searchPriority: IScript['searchPriority']\n      let map: TScriptIdIndexValue\n      let isAslAllowed: IScript['aslAllowed']\n\n      if (segmentKey.includes('EQUITY')) {\n        const item = itemData as TMasterDataEquity\n        exchangeSymbol = item[4]\n        isAslAllowed = item[3]\n        searchString = item[13]\n        searchPriority = item[14]\n        map = [segmentKey, itemIndex]\n      } else if (segmentKey.includes('UNDERLYING')) {\n        const item = itemData as TMasterDataUnderlying\n        exchangeSymbol = item[4]\n        isAslAllowed = item[3]\n        searchString = item[11]\n        searchPriority = item[12]\n        map = [segmentKey, itemIndex]\n      } else {\n        const item = itemData as TMasterDataDerivatives\n        exchangeSymbol = item[0]\n        isAslAllowed = derivativeItem![3]\n        searchString = derivativeItem![12]\n        searchPriority = derivativeItem![13]\n        map = [segmentKey, itemIndex, 3, derivativeItemIndex!]\n      }\n\n      if (isAslAllowed === 'N') return\n\n      const searchObj = {\n        exchangeSymbol,\n        searchString,\n        searchPriority,\n        data: map\n      }\n\n      const chunkIndex = getChunkIndex(searchPriority)\n      if (!index[chunkIndex]) {\n        index[chunkIndex] = []\n      }\n      index[chunkIndex].push(searchObj)\n    }\n\n    const getIndex = () => index\n\n    return {\n      addRow,\n      getIndex\n    }\n  }\n                    \n                \n\n            \n                \n                    Handles indexing of searchable strings for scripts, organizing them by\nsearch priority into chunked groups. This is useful for efficient search\nand retrieval operations.\n\n                \n            \n\n        \n    \n\n    src/Search/SearchWorker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        searchWorker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SearchWorker\n\n                    \n                \n\n\n        \n    \n\n    src/Constants/ERROR_MESSAGE.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SECURITY_MASTER_NOT_INITIALIZED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Security master isn't downloaded or initialized\"\n                    \n                \n\n\n        \n    \n\n    src/store/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IStore\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Description placeholder\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
